#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Granny

#include "Basic.hpp"

#include "Granny_classes.hpp"
#include "Granny_parameters.hpp"


namespace SDK
{

// Function Granny.AiCameraComponent.ScanActorsInCamera
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UAiCameraComponent::ScanActorsInCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AiCameraComponent", "ScanActorsInCamera");

	Params::AiCameraComponent_ScanActorsInCamera Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Granny.GrannyInstance.GetCommandArrayFromFile
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UGrannyInstance::GetCommandArrayFromFile(const class FString& Path)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GrannyInstance", "GetCommandArrayFromFile");

	Params::GrannyInstance_GetCommandArrayFromFile Parms{};

	Parms.Path = std::move(Path);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Granny.MainBFL.GetLuminancePixelPercent
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// TArray<struct FLinearColor>             InPixels                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// float                                   NearlyEqualTo                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Tolerance                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FLinearColor>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FLinearColor> UMainBFL::GetLuminancePixelPercent(const TArray<struct FLinearColor>& InPixels, float NearlyEqualTo, float Tolerance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MainBFL", "GetLuminancePixelPercent");

	Params::MainBFL_GetLuminancePixelPercent Parms{};

	Parms.InPixels = std::move(InPixels);
	Parms.NearlyEqualTo = NearlyEqualTo;
	Parms.Tolerance = Tolerance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Granny.MainBFL.ShuffleArray
// (Final, Native, Static, Private, BlueprintCallable)
// Parameters:
// TArray<class AActor*>                   MyArray                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// float                                   Seed                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UMainBFL::ShuffleArray(const TArray<class AActor*>& MyArray, float Seed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MainBFL", "ShuffleArray");

	Params::MainBFL_ShuffleArray Parms{};

	Parms.MyArray = std::move(MyArray);
	Parms.Seed = Seed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

