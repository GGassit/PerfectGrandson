#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ConsoleWidget

#include "Basic.hpp"

#include "BP_ConsoleWidget_classes.hpp"
#include "BP_ConsoleWidget_parameters.hpp"


namespace SDK
{

// Function BP_ConsoleWidget.BP_ConsoleWidget_C.VisController
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleWidget_C::VisController()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleWidget_C", "VisController");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleWidget.BP_ConsoleWidget_C.TryToUeConsole
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleWidget_C::TryToUeConsole()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleWidget_C", "TryToUeConsole");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleWidget.BP_ConsoleWidget_C.TryToDestroy
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleWidget_C::TryToDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleWidget_C", "TryToDestroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleWidget.BP_ConsoleWidget_C.TryToClearConsole
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleWidget_C::TryToClearConsole()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleWidget_C", "TryToClearConsole");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleWidget.BP_ConsoleWidget_C.TryRunLuaScript
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleWidget_C::TryRunLuaScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleWidget_C", "TryRunLuaScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleWidget.BP_ConsoleWidget_C.ToggleConsole
// (BlueprintCallable, BlueprintEvent)

void UBP_ConsoleWidget_C::ToggleConsole()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleWidget_C", "ToggleConsole");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleWidget.BP_ConsoleWidget_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ConsoleWidget_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleWidget_C", "Tick");

	Params::BP_ConsoleWidget_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ConsoleWidget.BP_ConsoleWidget_C.OnPreviewKeyDown
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBP_ConsoleWidget_C::OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleWidget_C", "OnPreviewKeyDown");

	Params::BP_ConsoleWidget_C_OnPreviewKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ConsoleWidget.BP_ConsoleWidget_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBP_ConsoleWidget_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleWidget_C", "OnKeyDown");

	Params::BP_ConsoleWidget_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ConsoleWidget.BP_ConsoleWidget_C.ExecuteUbergraph_BP_ConsoleWidget
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ConsoleWidget_C::ExecuteUbergraph_BP_ConsoleWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleWidget_C", "ExecuteUbergraph_BP_ConsoleWidget");

	Params::BP_ConsoleWidget_C_ExecuteUbergraph_BP_ConsoleWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ConsoleWidget.BP_ConsoleWidget_C.CreateResponse
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ConsoleWidget_C::CreateResponse(const class FString& Text, const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleWidget_C", "CreateResponse");

	Params::BP_ConsoleWidget_C_CreateResponse Parms{};

	Parms.Text = std::move(Text);
	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ConsoleWidget.BP_ConsoleWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_ConsoleWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleWidget.BP_ConsoleWidget_C.CommandHandler
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_Command                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_ConsoleWidget_C::CommandHandler(const class FString& Param_Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleWidget_C", "CommandHandler");

	Params::BP_ConsoleWidget_C_CommandHandler Parms{};

	Parms.Param_Command = std::move(Param_Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ConsoleWidget.BP_ConsoleWidget_C.BndEvt__BP_ConsoleWidget_EditableTextBox_169_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ConsoleWidget_C::BndEvt__BP_ConsoleWidget_EditableTextBox_169_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleWidget_C", "BndEvt__BP_ConsoleWidget_EditableTextBox_169_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature");

	Params::BP_ConsoleWidget_C_BndEvt__BP_ConsoleWidget_EditableTextBox_169_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ConsoleWidget.BP_ConsoleWidget_C.BndEvt__BP_ConsoleWidget_Button_0_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_ConsoleWidget_C::BndEvt__BP_ConsoleWidget_Button_0_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleWidget_C", "BndEvt__BP_ConsoleWidget_Button_0_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleWidget.BP_ConsoleWidget_C.ActorsList
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleWidget_C::ActorsList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleWidget_C", "ActorsList");

	UObject::ProcessEvent(Func, nullptr);
}

}

