#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ClickableText

#include "Basic.hpp"

#include "ClickableText_classes.hpp"
#include "ClickableText_parameters.hpp"


namespace SDK
{

// Function ClickableText.ClickableText_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UClickableText_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClickableText_C", "Tick");

	Params::ClickableText_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ClickableText.ClickableText_C.SetButtonParams
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Param_Text                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FSlateColor                      Param_DefaultColor                                     (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FSlateColor                      Param_SelectedColor                                    (BlueprintVisible, BlueprintReadOnly, Parm)
// EClickableTextEffectType                Param_HoverEffect                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETextJustify                            Param_Justification                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UClickableText_C::SetButtonParams(const class FText& Param_Text, const struct FSlateColor& Param_DefaultColor, const struct FSlateColor& Param_SelectedColor, EClickableTextEffectType Param_HoverEffect, ETextJustify Param_Justification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClickableText_C", "SetButtonParams");

	Params::ClickableText_C_SetButtonParams Parms{};

	Parms.Param_Text = std::move(Param_Text);
	Parms.Param_DefaultColor = std::move(Param_DefaultColor);
	Parms.Param_SelectedColor = std::move(Param_SelectedColor);
	Parms.Param_HoverEffect = Param_HoverEffect;
	Parms.Param_Justification = Param_Justification;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ClickableText.ClickableText_C.RetainerEffects
// (Public, BlueprintCallable, BlueprintEvent)

void UClickableText_C::RetainerEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClickableText_C", "RetainerEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ClickableText.ClickableText_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UClickableText_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClickableText_C", "PreConstruct");

	Params::ClickableText_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ClickableText.ClickableText_C.OnClick__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClickableText_C*                 Param_Text                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UClickableText_C::OnClick__DelegateSignature(class UClickableText_C* Param_Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClickableText_C", "OnClick__DelegateSignature");

	Params::ClickableText_C_OnClick__DelegateSignature Parms{};

	Parms.Param_Text = Param_Text;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ClickableText.ClickableText_C.ExecuteUbergraph_ClickableText
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UClickableText_C::ExecuteUbergraph_ClickableText(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClickableText_C", "ExecuteUbergraph_ClickableText");

	Params::ClickableText_C_ExecuteUbergraph_ClickableText Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ClickableText.ClickableText_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UClickableText_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClickableText_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ClickableText.ClickableText_C.ColorEffects
// (Public, BlueprintCallable, BlueprintEvent)

void UClickableText_C::ColorEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClickableText_C", "ColorEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ClickableText.ClickableText_C.ChangeText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Param_Text                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UClickableText_C::ChangeText(const class FText& Param_Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClickableText_C", "ChangeText");

	Params::ClickableText_C_ChangeText Parms{};

	Parms.Param_Text = std::move(Param_Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ClickableText.ClickableText_C.BndEvt__ClickableText_Button_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UClickableText_C::BndEvt__ClickableText_Button_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClickableText_C", "BndEvt__ClickableText_Button_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ClickableText.ClickableText_C.BndEvt__ClickableText_Button_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature
// (BlueprintEvent)

void UClickableText_C::BndEvt__ClickableText_Button_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClickableText_C", "BndEvt__ClickableText_Button_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ClickableText.ClickableText_C.BndEvt__ClickableText_Button_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UClickableText_C::BndEvt__ClickableText_Button_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClickableText_C", "BndEvt__ClickableText_Button_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ClickableText.ClickableText_C.AdditionalEffects
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UClickableText_C::AdditionalEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ClickableText_C", "AdditionalEffects");

	UObject::ProcessEvent(Func, nullptr);
}

}

