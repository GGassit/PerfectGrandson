#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DynamicCamera

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DynamicCamera.BP_DynamicCamera_C
// 0x0070 (0x0AA0 - 0x0A30)
class UBP_DynamicCamera_C final : public UCameraComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A30(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        FovRangeA;                                         // 0x0A38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FovRangeB;                                         // 0x0A40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FovSpeedRangeA;                                    // 0x0A48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FovSpeedRangeB;                                    // 0x0A50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FovInterpSpeed;                                    // 0x0A58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Right_Axis;                                        // 0x0A60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Forward_Axis;                                      // 0x0A68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CharacterMovement;                                 // 0x0A70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        ForceRightLeftShake;                               // 0x0A78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ForceForwardShake;                                 // 0x0A80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ForwardShakeSmothness;                             // 0x0A88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RightLeftShakeSmothness;                           // 0x0A90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_DynamicCamera(int32 EntryPoint);
	void CameraTick();
	void CameraIncline(class UCameraComponent* Camera, double RightAxis, double ForwardAxis, class UCharacterMovementComponent* Player, double Force, double Param_ForceForwardShake, double ForwardShakeHardness);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DynamicCamera_C">();
	}
	static class UBP_DynamicCamera_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_DynamicCamera_C>();
	}
};
static_assert(alignof(UBP_DynamicCamera_C) == 0x000010, "Wrong alignment on UBP_DynamicCamera_C");
static_assert(sizeof(UBP_DynamicCamera_C) == 0x000AA0, "Wrong size on UBP_DynamicCamera_C");
static_assert(offsetof(UBP_DynamicCamera_C, UberGraphFrame) == 0x000A30, "Member 'UBP_DynamicCamera_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_DynamicCamera_C, FovRangeA) == 0x000A38, "Member 'UBP_DynamicCamera_C::FovRangeA' has a wrong offset!");
static_assert(offsetof(UBP_DynamicCamera_C, FovRangeB) == 0x000A40, "Member 'UBP_DynamicCamera_C::FovRangeB' has a wrong offset!");
static_assert(offsetof(UBP_DynamicCamera_C, FovSpeedRangeA) == 0x000A48, "Member 'UBP_DynamicCamera_C::FovSpeedRangeA' has a wrong offset!");
static_assert(offsetof(UBP_DynamicCamera_C, FovSpeedRangeB) == 0x000A50, "Member 'UBP_DynamicCamera_C::FovSpeedRangeB' has a wrong offset!");
static_assert(offsetof(UBP_DynamicCamera_C, FovInterpSpeed) == 0x000A58, "Member 'UBP_DynamicCamera_C::FovInterpSpeed' has a wrong offset!");
static_assert(offsetof(UBP_DynamicCamera_C, Right_Axis) == 0x000A60, "Member 'UBP_DynamicCamera_C::Right_Axis' has a wrong offset!");
static_assert(offsetof(UBP_DynamicCamera_C, Forward_Axis) == 0x000A68, "Member 'UBP_DynamicCamera_C::Forward_Axis' has a wrong offset!");
static_assert(offsetof(UBP_DynamicCamera_C, CharacterMovement) == 0x000A70, "Member 'UBP_DynamicCamera_C::CharacterMovement' has a wrong offset!");
static_assert(offsetof(UBP_DynamicCamera_C, ForceRightLeftShake) == 0x000A78, "Member 'UBP_DynamicCamera_C::ForceRightLeftShake' has a wrong offset!");
static_assert(offsetof(UBP_DynamicCamera_C, ForceForwardShake) == 0x000A80, "Member 'UBP_DynamicCamera_C::ForceForwardShake' has a wrong offset!");
static_assert(offsetof(UBP_DynamicCamera_C, ForwardShakeSmothness) == 0x000A88, "Member 'UBP_DynamicCamera_C::ForwardShakeSmothness' has a wrong offset!");
static_assert(offsetof(UBP_DynamicCamera_C, RightLeftShakeSmothness) == 0x000A90, "Member 'UBP_DynamicCamera_C::RightLeftShakeSmothness' has a wrong offset!");

}

