#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CinematicPawn

#include "Basic.hpp"

#include "BP_CinematicPawn_classes.hpp"
#include "BP_CinematicPawn_parameters.hpp"


namespace SDK
{

// Function BP_CinematicPawn.BP_CinematicPawn_C.Zoom
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Zoom                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CinematicPawn_C::Zoom(bool Param_Zoom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CinematicPawn_C", "Zoom");

	Params::BP_CinematicPawn_C_Zoom Parms{};

	Parms.Param_Zoom = Param_Zoom;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CinematicPawn.BP_CinematicPawn_C.Timeline__UpdateFunc
// (BlueprintEvent)

void ABP_CinematicPawn_C::Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CinematicPawn_C", "Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CinematicPawn.BP_CinematicPawn_C.Timeline__FinishedFunc
// (BlueprintEvent)

void ABP_CinematicPawn_C::Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CinematicPawn_C", "Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CinematicPawn.BP_CinematicPawn_C.ReturnSecodnOption_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_CinematicPawn_C::ReturnSecodnOption_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CinematicPawn_C", "ReturnSecodnOption_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CinematicPawn.BP_CinematicPawn_C.ReturnFirstOption_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_CinematicPawn_C::ReturnFirstOption_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CinematicPawn_C", "ReturnFirstOption_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CinematicPawn.BP_CinematicPawn_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CinematicPawn_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CinematicPawn_C", "ReceiveTick");

	Params::BP_CinematicPawn_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CinematicPawn.BP_CinematicPawn_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_CinematicPawn_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CinematicPawn_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CinematicPawn.BP_CinematicPawn_C.OnClick_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClickableText_C*                 Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_CinematicPawn_C::OnClick_Event(class UClickableText_C* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CinematicPawn_C", "OnClick_Event");

	Params::BP_CinematicPawn_C_OnClick_Event Parms{};

	Parms.Text = Text;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CinematicPawn.BP_CinematicPawn_C.OnActorBeginOverlap_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OverlappedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CinematicPawn_C::OnActorBeginOverlap_Event(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CinematicPawn_C", "OnActorBeginOverlap_Event");

	Params::BP_CinematicPawn_C_OnActorBeginOverlap_Event Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CinematicPawn.BP_CinematicPawn_C.LookAtHouse
// (BlueprintCallable, BlueprintEvent)

void ABP_CinematicPawn_C::LookAtHouse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CinematicPawn_C", "LookAtHouse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CinematicPawn.BP_CinematicPawn_C.InpActEvt_IA_Use_K2Node_EnhancedInputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CinematicPawn_C::InpActEvt_IA_Use_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CinematicPawn_C", "InpActEvt_IA_Use_K2Node_EnhancedInputActionEvent_0");

	Params::BP_CinematicPawn_C_InpActEvt_IA_Use_K2Node_EnhancedInputActionEvent_0 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CinematicPawn.BP_CinematicPawn_C.InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CinematicPawn_C::InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CinematicPawn_C", "InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_1");

	Params::BP_CinematicPawn_C_InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_1 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CinematicPawn.BP_CinematicPawn_C.Footstep
// (BlueprintCallable, BlueprintEvent)

void ABP_CinematicPawn_C::Footstep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CinematicPawn_C", "Footstep");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CinematicPawn.BP_CinematicPawn_C.ExecuteUbergraph_BP_CinematicPawn
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CinematicPawn_C::ExecuteUbergraph_BP_CinematicPawn(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CinematicPawn_C", "ExecuteUbergraph_BP_CinematicPawn");

	Params::BP_CinematicPawn_C_ExecuteUbergraph_BP_CinematicPawn Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CinematicPawn.BP_CinematicPawn_C.CustomEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_CinematicPawn_C::CustomEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CinematicPawn_C", "CustomEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CinematicPawn.BP_CinematicPawn_C.CameraShake
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CinematicPawn_C::CameraShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CinematicPawn_C", "CameraShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CinematicPawn.BP_CinematicPawn_C.AddRecEffectUi
// (BlueprintCallable, BlueprintEvent)

void ABP_CinematicPawn_C::AddRecEffectUi()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CinematicPawn_C", "AddRecEffectUi");

	UObject::ProcessEvent(Func, nullptr);
}

}

