#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LanguagePopup

#include "Basic.hpp"

#include "LanguagePopup_classes.hpp"
#include "LanguagePopup_parameters.hpp"


namespace SDK
{

// Function LanguagePopup.LanguagePopup_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULanguagePopup_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LanguagePopup_C", "Tick");

	Params::LanguagePopup_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LanguagePopup.LanguagePopup_C.SelectLanguageByString
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FText                             CultureText                                            (Parm, OutParm)

void ULanguagePopup_C::SelectLanguageByString(const class FString& Culture, class FText* CultureText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LanguagePopup_C", "SelectLanguageByString");

	Params::LanguagePopup_C_SelectLanguageByString Parms{};

	Parms.Culture = std::move(Culture);

	UObject::ProcessEvent(Func, &Parms);

	if (CultureText != nullptr)
		*CultureText = std::move(Parms.CultureText);
}


// Function LanguagePopup.LanguagePopup_C.OnClick_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClickableText_C*                 Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ULanguagePopup_C::OnClick_Event(class UClickableText_C* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LanguagePopup_C", "OnClick_Event");

	Params::LanguagePopup_C_OnClick_Event Parms{};

	Parms.Text = Text;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LanguagePopup.LanguagePopup_C.ExecuteUbergraph_LanguagePopup
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULanguagePopup_C::ExecuteUbergraph_LanguagePopup(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LanguagePopup_C", "ExecuteUbergraph_LanguagePopup");

	Params::LanguagePopup_C_ExecuteUbergraph_LanguagePopup Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LanguagePopup.LanguagePopup_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ULanguagePopup_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LanguagePopup_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}

}

