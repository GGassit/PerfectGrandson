#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DynamicCamera

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_DynamicCamera.BP_DynamicCamera_C.ExecuteUbergraph_BP_DynamicCamera
// 0x0020 (0x0020 - 0x0000)
struct BP_DynamicCamera_C_ExecuteUbergraph_BP_DynamicCamera final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29E3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicCamera_C_ExecuteUbergraph_BP_DynamicCamera) == 0x000008, "Wrong alignment on BP_DynamicCamera_C_ExecuteUbergraph_BP_DynamicCamera");
static_assert(sizeof(BP_DynamicCamera_C_ExecuteUbergraph_BP_DynamicCamera) == 0x000020, "Wrong size on BP_DynamicCamera_C_ExecuteUbergraph_BP_DynamicCamera");
static_assert(offsetof(BP_DynamicCamera_C_ExecuteUbergraph_BP_DynamicCamera, EntryPoint) == 0x000000, "Member 'BP_DynamicCamera_C_ExecuteUbergraph_BP_DynamicCamera::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_ExecuteUbergraph_BP_DynamicCamera, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_DynamicCamera_C_ExecuteUbergraph_BP_DynamicCamera::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_ExecuteUbergraph_BP_DynamicCamera, K2Node_DynamicCast_AsCharacter) == 0x000010, "Member 'BP_DynamicCamera_C_ExecuteUbergraph_BP_DynamicCamera::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_ExecuteUbergraph_BP_DynamicCamera, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_DynamicCamera_C_ExecuteUbergraph_BP_DynamicCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_DynamicCamera.BP_DynamicCamera_C.CameraIncline
// 0x0238 (0x0238 - 0x0000)
struct BP_DynamicCamera_C_CameraIncline final
{
public:
	class UCameraComponent*                       Camera;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        RightAxis;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ForwardAxis;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            Player;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Force;                                             // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_ForceForwardShake;                           // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ForwardShakeHardness;                              // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29E4[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29E5[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_2;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0128(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast;           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast_1;         // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast_2;         // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFieldOfView_InFieldOfView_ImplicitCast; // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DynamicCamera_C_CameraIncline) == 0x000008, "Wrong alignment on BP_DynamicCamera_C_CameraIncline");
static_assert(sizeof(BP_DynamicCamera_C_CameraIncline) == 0x000238, "Wrong size on BP_DynamicCamera_C_CameraIncline");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, Camera) == 0x000000, "Member 'BP_DynamicCamera_C_CameraIncline::Camera' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, RightAxis) == 0x000008, "Member 'BP_DynamicCamera_C_CameraIncline::RightAxis' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, ForwardAxis) == 0x000010, "Member 'BP_DynamicCamera_C_CameraIncline::ForwardAxis' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, Player) == 0x000018, "Member 'BP_DynamicCamera_C_CameraIncline::Player' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, Force) == 0x000020, "Member 'BP_DynamicCamera_C_CameraIncline::Force' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, Param_ForceForwardShake) == 0x000028, "Member 'BP_DynamicCamera_C_CameraIncline::Param_ForceForwardShake' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, ForwardShakeHardness) == 0x000030, "Member 'BP_DynamicCamera_C_CameraIncline::ForwardShakeHardness' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_VSize_ReturnValue) == 0x000048, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_BreakVector_X) == 0x000050, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_BreakVector_Y) == 0x000058, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_BreakVector_Z) == 0x000060, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000068, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_VSize_ReturnValue_1) == 0x000070, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000078, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_BreakRotator_Roll) == 0x000080, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_BreakRotator_Pitch) == 0x000084, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_BreakRotator_Yaw) == 0x000088, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000090, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_NormalizeToRange_ReturnValue) == 0x000098, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_BreakRotator_Roll_1) == 0x0000A0, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_BreakRotator_Pitch_1) == 0x0000A4, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_BreakRotator_Yaw_1) == 0x0000A8, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_FClamp_ReturnValue) == 0x0000B0, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_Lerp_ReturnValue) == 0x0000B8, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_MapRangeClamped_ReturnValue) == 0x0000C0, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0000C8, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000D0, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0000D8, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_FInterpTo_ReturnValue) == 0x0000E0, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0000E8, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x0000F0, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x0000F8, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_FInterpTo_ReturnValue_1) == 0x000100, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_FInterpTo_ReturnValue_2) == 0x000108, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_FInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_MakeRotator_ReturnValue) == 0x000110, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000128, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_FInterpTo_Current_ImplicitCast) == 0x000210, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_FInterpTo_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_FInterpTo_Current_ImplicitCast_1) == 0x000218, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_FInterpTo_Current_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_FInterpTo_Current_ImplicitCast_2) == 0x000220, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_FInterpTo_Current_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_SetFieldOfView_InFieldOfView_ImplicitCast) == 0x000228, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_SetFieldOfView_InFieldOfView_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x00022C, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_DynamicCamera_C_CameraIncline, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000230, "Member 'BP_DynamicCamera_C_CameraIncline::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");

}

