#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Hammer

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_Hammer.BP_Hammer_C.Use
// 0x0010 (0x0010 - 0x0000)
struct BP_Hammer_C_Use final
{
public:
	class ABP_Player_C*                           Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Start;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Hammer_C_Use) == 0x000008, "Wrong alignment on BP_Hammer_C_Use");
static_assert(sizeof(BP_Hammer_C_Use) == 0x000010, "Wrong size on BP_Hammer_C_Use");
static_assert(offsetof(BP_Hammer_C_Use, Param_Player) == 0x000000, "Member 'BP_Hammer_C_Use::Param_Player' has a wrong offset!");
static_assert(offsetof(BP_Hammer_C_Use, Start) == 0x000008, "Member 'BP_Hammer_C_Use::Start' has a wrong offset!");

// Function BP_Hammer.BP_Hammer_C.Taken
// 0x0001 (0x0001 - 0x0000)
struct BP_Hammer_C_Taken final
{
public:
	bool                                          ByGranny;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Hammer_C_Taken) == 0x000001, "Wrong alignment on BP_Hammer_C_Taken");
static_assert(sizeof(BP_Hammer_C_Taken) == 0x000001, "Wrong size on BP_Hammer_C_Taken");
static_assert(offsetof(BP_Hammer_C_Taken, ByGranny) == 0x000000, "Member 'BP_Hammer_C_Taken::ByGranny' has a wrong offset!");

// Function BP_Hammer.BP_Hammer_C.ExecuteUbergraph_BP_Hammer
// 0x0018 (0x0018 - 0x0000)
struct BP_Hammer_C_ExecuteUbergraph_BP_Hammer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_226D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Player_C*                           K2Node_Event_Player;                               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Start;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ByGranny;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Hammer_C_ExecuteUbergraph_BP_Hammer) == 0x000008, "Wrong alignment on BP_Hammer_C_ExecuteUbergraph_BP_Hammer");
static_assert(sizeof(BP_Hammer_C_ExecuteUbergraph_BP_Hammer) == 0x000018, "Wrong size on BP_Hammer_C_ExecuteUbergraph_BP_Hammer");
static_assert(offsetof(BP_Hammer_C_ExecuteUbergraph_BP_Hammer, EntryPoint) == 0x000000, "Member 'BP_Hammer_C_ExecuteUbergraph_BP_Hammer::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Hammer_C_ExecuteUbergraph_BP_Hammer, K2Node_Event_Player) == 0x000008, "Member 'BP_Hammer_C_ExecuteUbergraph_BP_Hammer::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(BP_Hammer_C_ExecuteUbergraph_BP_Hammer, K2Node_Event_Start) == 0x000010, "Member 'BP_Hammer_C_ExecuteUbergraph_BP_Hammer::K2Node_Event_Start' has a wrong offset!");
static_assert(offsetof(BP_Hammer_C_ExecuteUbergraph_BP_Hammer, K2Node_Event_ByGranny) == 0x000011, "Member 'BP_Hammer_C_ExecuteUbergraph_BP_Hammer::K2Node_Event_ByGranny' has a wrong offset!");

}

