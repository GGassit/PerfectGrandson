#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_PlayerInterface

#include "Basic.hpp"

#include "BPI_PlayerInterface_classes.hpp"
#include "BPI_PlayerInterface_parameters.hpp"


namespace SDK
{

// Function BPI_PlayerInterface.BPI_PlayerInterface_C.Use
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Player_C*                     Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Start                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerInterface_C::Use(class ABP_Player_C* Player, bool Start)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerInterface_C", "Use");

	Params::BPI_PlayerInterface_C_Use Parms{};

	Parms.Player = Player;
	Parms.Start = Start;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerInterface.BPI_PlayerInterface_C.InteractEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Player_C*                     Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerInterface_C::InteractEnd(class ABP_Player_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerInterface_C", "InteractEnd");

	Params::BPI_PlayerInterface_C_InteractEnd Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerInterface.BPI_PlayerInterface_C.InteractCanceled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Player_C*                     Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_PlayerInterface_C::InteractCanceled(class ABP_Player_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerInterface_C", "InteractCanceled");

	Params::BPI_PlayerInterface_C_InteractCanceled Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_PlayerInterface.BPI_PlayerInterface_C.Interact
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Player_C*                     Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void IBPI_PlayerInterface_C::Interact(class ABP_Player_C* Player, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PlayerInterface_C", "Interact");

	Params::BPI_PlayerInterface_C_Interact Parms{};

	Parms.Player = Player;
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}

}

