#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Player

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "PhysicsCore_structs.hpp"
#include "EDifficulty_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Player.BP_Player_C
// 0x04D0 (0x0AF0 - 0x0620)
class ABP_Player_C final : public ACharacter
{
public:
	uint8                                         Pad_28C8[0x8];                                     // 0x0618(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0620(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   PointLight1;                                       // 0x0628(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0630(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Heartbeat;                                         // 0x0638(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm;                                         // 0x0640(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CatchCamera;                                       // 0x0648(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0650(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    CameraBoom;                                        // 0x0658(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0660(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x0668(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsHandleComponent*                PhysicsHandle;                                     // 0x0670(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Hand;                                              // 0x0678(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm1;                                        // 0x0680(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_DynamicCamera_C*                    BP_DynamicCamera;                                  // 0x0688(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x0690(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_NewTrack_0_B3B9A7DA42737E27C961A78448F257A9; // 0x0698(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1__Direction_B3B9A7DA42737E27C961A78448F257A9; // 0x069C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C9[0x3];                                     // 0x069D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x06A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_A31EC01741E2A05E2FF98FBFE5C41ADA; // 0x06A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_A31EC01741E2A05E2FF98FBFE5C41ADA; // 0x06AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28CA[0x3];                                     // 0x06AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x06B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_NewTrack_0_2113897749CCA0FAE28F7CB019FB7ABD; // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline__Direction_2113897749CCA0FAE28F7CB019FB7ABD; // 0x06BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28CB[0x3];                                     // 0x06BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline;                                          // 0x06C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        WalkSpeed;                                         // 0x06C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SprintSpeed;                                       // 0x06D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ItemBase_C*                         CurrentHandsItem;                                  // 0x06D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemInHands;                                       // 0x06E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28CC[0x7];                                     // 0x06E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HideLocation;                                      // 0x06E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hiding;                                            // 0x0700(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Movement;                                          // 0x0701(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Look;                                              // 0x0702(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LowHiding;                                         // 0x0703(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28CD[0x4];                                     // 0x0704(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NewVar;                                            // 0x0708(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             LastInteractionHit;                                // 0x0720(0x00E8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             LastUseHit;                                        // 0x0808(0x00E8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	FMulticastInlineDelegateProperty_             HideAnimFinished;                                  // 0x08F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          AllowDrop;                                         // 0x0900(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28CE[0x3];                                     // 0x0901(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CatchedAlpha;                                      // 0x0904(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Catched;                                           // 0x0908(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28CF[0x7];                                     // 0x0909(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Granny_C*                           GrannyForCamera;                                   // 0x0910(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CamStartRot;                                       // 0x0918(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UBP_GameInstanceMain_C*                 As_BP_Game_Instance_Main;                          // 0x0930(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        InteractDistance;                                  // 0x0938(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Granny_C*                           AlwaysActiveGrannyRef;                             // 0x0940(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Glitchmat;                                         // 0x0948(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        B;                                                 // 0x0950(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OutSpeedMult;                                      // 0x0958(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InSpeedMult;                                       // 0x0960(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Baza;                                              // 0x0968(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          TPBaza;                                            // 0x0970(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LMBState;                                          // 0x0971(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28D0[0x6];                                     // 0x0972(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DefaultFOV;                                        // 0x0978(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              MoveVector;                                        // 0x0980(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoCipping;                                         // 0x0990(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28D1[0x7];                                     // 0x0991(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               SharpenShader;                                     // 0x0998(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        ItemSpeedMultiplier;                               // 0x09A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrSpeed;                                         // 0x09A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ScreamerID;                                        // 0x09B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28D2[0x4];                                     // 0x09B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GrannyController_C*                 As_BP_Granny_Controller;                           // 0x09B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Trappedplayer;                                     // 0x09C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28D3[0x7];                                     // 0x09C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TrapBear_C*                         TrappedTRAP;                                       // 0x09C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          HideAnimationProcess;                              // 0x09D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28D4[0x7];                                     // 0x09D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               PP_AngryGrannyInView;                              // 0x09D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         AngryGrannyInView;                                 // 0x09E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BrokenLegs;                                        // 0x09E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_28D5[0x3];                                     // 0x09E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CurrentInteractionDelay;                           // 0x09E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        TimerStartTime;                                    // 0x09F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Interacting;                                       // 0x09F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AfterFalling;                                      // 0x09F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnabledLights;                                     // 0x09FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LightsTickEnabled;                                 // 0x09FB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StateCrouch;                                       // 0x09FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28D6[0x3];                                     // 0x09FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             LandHit;                                           // 0x0A00(0x00E8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_HideBase_C*                         Ref_for_hide;                                      // 0x0AE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Zoom_Function();
	void Trapped(class ABP_TrapBear_C* Param_TrappedTRAP);
	void ToggleNoclip();
	void Timeline__UpdateFunc();
	void Timeline__FinishedFunc();
	void Timeline_1__UpdateFunc();
	void Timeline_1__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void ThrowItem();
	void TeleportToBaza();
	void SurfaceToGlide();
	void StartNot2();
	void StartDelayedInteraction();
	void SpeedUpdate();
	void ShowNote(const class FText& NoteText);
	void SetPlayerPrimarySpeed();
	void SetCameraDamage();
	void Restarted();
	void ReceiveUnpossessed(class AController* OldController);
	void ReceiveTick(float DeltaSeconds);
	void ReceivePossessed(class AController* NewController);
	void ReceiveBeginPlay();
	void Prikol();
	void Poimali(float Duration);
	void PlayScreamer(class UMaterialInterface* Parent, TSubclassOf<class ULegacyCameraShake> ShakeClass, float InFieldOfView, float NewIntensity);
	void PlayMediumGlitch();
	void PlayGlitches(int32 Num);
	void PlayerInteract();
	void PlayerFall();
	void PlayBigGlitch();
	void OnLanded(const struct FHitResult& Hit);
	void LightsTick();
	void LightOverrotation();
	void K2_OnEndCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust);
	void ItemSpeedMultiply();
	void InteractionEnded();
	void InpActEvt_V_K2Node_InputDebugKeyEvent_0(const struct FKey& Key, const struct FInputActionValue& ActionValue);
	void InpActEvt_IA_Use_K2Node_EnhancedInputActionEvent_2(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Use_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Use_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_5(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_4(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_3(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_15(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_18(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_17(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_16(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_14(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_13(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_12(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_DropItem_K2Node_EnhancedInputActionEvent_11(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_DropItem_K2Node_EnhancedInputActionEvent_10(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_9(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_8(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_7(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_6(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_F1_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void HidePlayer(class USceneComponent* Param_Scene, bool Low, double Inspeed, double OutSpeed, class USceneComponent* Param_Baza, bool Param_TPBaza);
	void HideAnimFinished__DelegateSignature(bool PlayerHide);
	void GrabProcessing();
	void GrabItem(class ABP_ItemBase_C* Item);
	bool GetHitUnderLeg(struct FHitResult* OutHit);
	void GetGranny(class ABP_Granny_C** Granny);
	void Footstep();
	void FlashlightOverrotation();
	void FlashlightFix();
	void ExecuteUbergraph_BP_Player(int32 EntryPoint);
	void EnableLights();
	void DropItem();
	void DisableLights();
	void DarkerImprovement();
	void CustomPlayerCrouch(bool Param_Crouch);
	void CustomEvent_0();
	void CustomEvent();
	void Crouch_Camera_Fix();
	void CreatePP();
	void CheckIfINteractPossible();
	void CheckIfGrannyHiddenFromPlayer(bool* Hidden);
	void Catch(class ABP_Granny_C* Granny);
	void CanInteract(bool* Param_CanInteract);
	void CancelInteract();
	bool CameraTrace(double Distance, bool bTraceComplex, EDrawDebugTrace DrawDebugType, struct FHitResult* OutHit);
	void CameraShake();
	void CallStartNotifications();
	void CalcCatchAlpha();
	void AngryGrannyEffectSetup();
	void AngryGrannyEffect();
	void Adrenaline();
	void AddInputMapping();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Player_C">();
	}
	static class ABP_Player_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Player_C>();
	}
};
static_assert(alignof(ABP_Player_C) == 0x000010, "Wrong alignment on ABP_Player_C");
static_assert(sizeof(ABP_Player_C) == 0x000AF0, "Wrong size on ABP_Player_C");
static_assert(offsetof(ABP_Player_C, UberGraphFrame) == 0x000620, "Member 'ABP_Player_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, PointLight1) == 0x000628, "Member 'ABP_Player_C::PointLight1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, PointLight) == 0x000630, "Member 'ABP_Player_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, Heartbeat) == 0x000638, "Member 'ABP_Player_C::Heartbeat' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, SpringArm) == 0x000640, "Member 'ABP_Player_C::SpringArm' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, CatchCamera) == 0x000648, "Member 'ABP_Player_C::CatchCamera' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, Scene) == 0x000650, "Member 'ABP_Player_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, CameraBoom) == 0x000658, "Member 'ABP_Player_C::CameraBoom' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, Box) == 0x000660, "Member 'ABP_Player_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, Audio) == 0x000668, "Member 'ABP_Player_C::Audio' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, PhysicsHandle) == 0x000670, "Member 'ABP_Player_C::PhysicsHandle' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, Hand) == 0x000678, "Member 'ABP_Player_C::Hand' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, SpringArm1) == 0x000680, "Member 'ABP_Player_C::SpringArm1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, BP_DynamicCamera) == 0x000688, "Member 'ABP_Player_C::BP_DynamicCamera' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, SpotLight) == 0x000690, "Member 'ABP_Player_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, Timeline_1_NewTrack_0_B3B9A7DA42737E27C961A78448F257A9) == 0x000698, "Member 'ABP_Player_C::Timeline_1_NewTrack_0_B3B9A7DA42737E27C961A78448F257A9' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, Timeline_1__Direction_B3B9A7DA42737E27C961A78448F257A9) == 0x00069C, "Member 'ABP_Player_C::Timeline_1__Direction_B3B9A7DA42737E27C961A78448F257A9' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, Timeline_1) == 0x0006A0, "Member 'ABP_Player_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, Timeline_0_NewTrack_0_A31EC01741E2A05E2FF98FBFE5C41ADA) == 0x0006A8, "Member 'ABP_Player_C::Timeline_0_NewTrack_0_A31EC01741E2A05E2FF98FBFE5C41ADA' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, Timeline_0__Direction_A31EC01741E2A05E2FF98FBFE5C41ADA) == 0x0006AC, "Member 'ABP_Player_C::Timeline_0__Direction_A31EC01741E2A05E2FF98FBFE5C41ADA' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, Timeline_0) == 0x0006B0, "Member 'ABP_Player_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, Timeline_NewTrack_0_2113897749CCA0FAE28F7CB019FB7ABD) == 0x0006B8, "Member 'ABP_Player_C::Timeline_NewTrack_0_2113897749CCA0FAE28F7CB019FB7ABD' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, Timeline__Direction_2113897749CCA0FAE28F7CB019FB7ABD) == 0x0006BC, "Member 'ABP_Player_C::Timeline__Direction_2113897749CCA0FAE28F7CB019FB7ABD' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, Timeline) == 0x0006C0, "Member 'ABP_Player_C::Timeline' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, WalkSpeed) == 0x0006C8, "Member 'ABP_Player_C::WalkSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, SprintSpeed) == 0x0006D0, "Member 'ABP_Player_C::SprintSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, CurrentHandsItem) == 0x0006D8, "Member 'ABP_Player_C::CurrentHandsItem' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, ItemInHands) == 0x0006E0, "Member 'ABP_Player_C::ItemInHands' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, HideLocation) == 0x0006E8, "Member 'ABP_Player_C::HideLocation' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, Hiding) == 0x000700, "Member 'ABP_Player_C::Hiding' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, Movement) == 0x000701, "Member 'ABP_Player_C::Movement' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, Look) == 0x000702, "Member 'ABP_Player_C::Look' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, LowHiding) == 0x000703, "Member 'ABP_Player_C::LowHiding' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, NewVar) == 0x000708, "Member 'ABP_Player_C::NewVar' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, LastInteractionHit) == 0x000720, "Member 'ABP_Player_C::LastInteractionHit' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, LastUseHit) == 0x000808, "Member 'ABP_Player_C::LastUseHit' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, HideAnimFinished) == 0x0008F0, "Member 'ABP_Player_C::HideAnimFinished' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, AllowDrop) == 0x000900, "Member 'ABP_Player_C::AllowDrop' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, CatchedAlpha) == 0x000904, "Member 'ABP_Player_C::CatchedAlpha' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, Catched) == 0x000908, "Member 'ABP_Player_C::Catched' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, GrannyForCamera) == 0x000910, "Member 'ABP_Player_C::GrannyForCamera' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, CamStartRot) == 0x000918, "Member 'ABP_Player_C::CamStartRot' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, As_BP_Game_Instance_Main) == 0x000930, "Member 'ABP_Player_C::As_BP_Game_Instance_Main' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, InteractDistance) == 0x000938, "Member 'ABP_Player_C::InteractDistance' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, AlwaysActiveGrannyRef) == 0x000940, "Member 'ABP_Player_C::AlwaysActiveGrannyRef' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, Glitchmat) == 0x000948, "Member 'ABP_Player_C::Glitchmat' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, B) == 0x000950, "Member 'ABP_Player_C::B' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, OutSpeedMult) == 0x000958, "Member 'ABP_Player_C::OutSpeedMult' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, InSpeedMult) == 0x000960, "Member 'ABP_Player_C::InSpeedMult' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, Baza) == 0x000968, "Member 'ABP_Player_C::Baza' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, TPBaza) == 0x000970, "Member 'ABP_Player_C::TPBaza' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, LMBState) == 0x000971, "Member 'ABP_Player_C::LMBState' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, DefaultFOV) == 0x000978, "Member 'ABP_Player_C::DefaultFOV' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, MoveVector) == 0x000980, "Member 'ABP_Player_C::MoveVector' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, NoCipping) == 0x000990, "Member 'ABP_Player_C::NoCipping' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, SharpenShader) == 0x000998, "Member 'ABP_Player_C::SharpenShader' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, ItemSpeedMultiplier) == 0x0009A0, "Member 'ABP_Player_C::ItemSpeedMultiplier' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, CurrSpeed) == 0x0009A8, "Member 'ABP_Player_C::CurrSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, ScreamerID) == 0x0009B0, "Member 'ABP_Player_C::ScreamerID' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, As_BP_Granny_Controller) == 0x0009B8, "Member 'ABP_Player_C::As_BP_Granny_Controller' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, Trappedplayer) == 0x0009C0, "Member 'ABP_Player_C::Trappedplayer' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, TrappedTRAP) == 0x0009C8, "Member 'ABP_Player_C::TrappedTRAP' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, HideAnimationProcess) == 0x0009D0, "Member 'ABP_Player_C::HideAnimationProcess' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, PP_AngryGrannyInView) == 0x0009D8, "Member 'ABP_Player_C::PP_AngryGrannyInView' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, AngryGrannyInView) == 0x0009E0, "Member 'ABP_Player_C::AngryGrannyInView' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, BrokenLegs) == 0x0009E4, "Member 'ABP_Player_C::BrokenLegs' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, CurrentInteractionDelay) == 0x0009E8, "Member 'ABP_Player_C::CurrentInteractionDelay' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, TimerStartTime) == 0x0009F0, "Member 'ABP_Player_C::TimerStartTime' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, Interacting) == 0x0009F8, "Member 'ABP_Player_C::Interacting' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, AfterFalling) == 0x0009F9, "Member 'ABP_Player_C::AfterFalling' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, EnabledLights) == 0x0009FA, "Member 'ABP_Player_C::EnabledLights' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, LightsTickEnabled) == 0x0009FB, "Member 'ABP_Player_C::LightsTickEnabled' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, StateCrouch) == 0x0009FC, "Member 'ABP_Player_C::StateCrouch' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, LandHit) == 0x000A00, "Member 'ABP_Player_C::LandHit' has a wrong offset!");
static_assert(offsetof(ABP_Player_C, Ref_for_hide) == 0x000AE8, "Member 'ABP_Player_C::Ref_for_hide' has a wrong offset!");

}

