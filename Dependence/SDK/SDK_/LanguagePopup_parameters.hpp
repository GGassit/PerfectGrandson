#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LanguagePopup

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function LanguagePopup.LanguagePopup_C.Tick
// 0x0048 (0x0048 - 0x0000)
struct LanguagePopup_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LanguagePopup_C_Tick) == 0x000008, "Wrong alignment on LanguagePopup_C_Tick");
static_assert(sizeof(LanguagePopup_C_Tick) == 0x000048, "Wrong size on LanguagePopup_C_Tick");
static_assert(offsetof(LanguagePopup_C_Tick, MyGeometry) == 0x000000, "Member 'LanguagePopup_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_Tick, InDeltaTime) == 0x000040, "Member 'LanguagePopup_C_Tick::InDeltaTime' has a wrong offset!");

// Function LanguagePopup.LanguagePopup_C.SelectLanguageByString
// 0x0030 (0x0030 - 0x0000)
struct LanguagePopup_C_SelectLanguageByString final
{
public:
	class FString                                 Culture;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CultureText;                                       // 0x0010(0x0018)(Parm, OutParm)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LanguagePopup_C_SelectLanguageByString) == 0x000008, "Wrong alignment on LanguagePopup_C_SelectLanguageByString");
static_assert(sizeof(LanguagePopup_C_SelectLanguageByString) == 0x000030, "Wrong size on LanguagePopup_C_SelectLanguageByString");
static_assert(offsetof(LanguagePopup_C_SelectLanguageByString, Culture) == 0x000000, "Member 'LanguagePopup_C_SelectLanguageByString::Culture' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_SelectLanguageByString, CultureText) == 0x000010, "Member 'LanguagePopup_C_SelectLanguageByString::CultureText' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_SelectLanguageByString, K2Node_SwitchString_CmpSuccess) == 0x000028, "Member 'LanguagePopup_C_SelectLanguageByString::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

// Function LanguagePopup.LanguagePopup_C.OnClick_Event
// 0x0008 (0x0008 - 0x0000)
struct LanguagePopup_C_OnClick_Event final
{
public:
	class UClickableText_C*                       Text;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LanguagePopup_C_OnClick_Event) == 0x000008, "Wrong alignment on LanguagePopup_C_OnClick_Event");
static_assert(sizeof(LanguagePopup_C_OnClick_Event) == 0x000008, "Wrong size on LanguagePopup_C_OnClick_Event");
static_assert(offsetof(LanguagePopup_C_OnClick_Event, Text) == 0x000000, "Member 'LanguagePopup_C_OnClick_Event::Text' has a wrong offset!");

// Function LanguagePopup.LanguagePopup_C.ExecuteUbergraph_LanguagePopup
// 0x0138 (0x0138 - 0x0000)
struct LanguagePopup_C_ExecuteUbergraph_LanguagePopup final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UClickableText_C* Text)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0020(0x0040)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25A7[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class FString>                         CallFunc_GetLocalizedCultures_ReturnValue;         // 0x0078(0x0010)(ReferenceParm)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25A8[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClickableText_C*                       K2Node_DynamicCast_AsClickable_Text;               // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25A9[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_1;          // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_2;          // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_3;          // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UClickableText_C*                       K2Node_CustomEvent_Text;                           // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25AA[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0100(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25AB[0x3];                                     // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_SelectLanguageByString_CultureText;       // 0x0120(0x0018)()
};
static_assert(alignof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup) == 0x000008, "Wrong alignment on LanguagePopup_C_ExecuteUbergraph_LanguagePopup");
static_assert(sizeof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup) == 0x000138, "Wrong size on LanguagePopup_C_ExecuteUbergraph_LanguagePopup");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, EntryPoint) == 0x000000, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::EntryPoint' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, Temp_int_Array_Index_Variable) == 0x000014, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, K2Node_Event_MyGeometry) == 0x000020, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, K2Node_Event_InDeltaTime) == 0x000060, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, CallFunc_GetAllChildren_ReturnValue) == 0x000068, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, CallFunc_GetLocalizedCultures_ReturnValue) == 0x000078, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::CallFunc_GetLocalizedCultures_ReturnValue' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, CallFunc_Array_Get_Item) == 0x000088, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, K2Node_DynamicCast_AsClickable_Text) == 0x000098, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::K2Node_DynamicCast_AsClickable_Text' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, CallFunc_Less_IntInt_ReturnValue) == 0x0000A1, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0000A8, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, CallFunc_MakeLiteralString_ReturnValue) == 0x0000B0, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, CallFunc_MakeLiteralString_ReturnValue_1) == 0x0000C0, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::CallFunc_MakeLiteralString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, CallFunc_MakeLiteralString_ReturnValue_2) == 0x0000D0, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::CallFunc_MakeLiteralString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, CallFunc_MakeLiteralString_ReturnValue_3) == 0x0000E0, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::CallFunc_MakeLiteralString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, K2Node_CustomEvent_Text) == 0x0000F0, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, K2Node_SwitchName_CmpSuccess) == 0x0000F8, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, Temp_int_Variable) == 0x0000FC, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, K2Node_Select_Default) == 0x000100, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, CallFunc_Array_Find_ReturnValue) == 0x000110, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000114, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, CallFunc_Conv_StringToName_ReturnValue) == 0x000118, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(LanguagePopup_C_ExecuteUbergraph_LanguagePopup, CallFunc_SelectLanguageByString_CultureText) == 0x000120, "Member 'LanguagePopup_C_ExecuteUbergraph_LanguagePopup::CallFunc_SelectLanguageByString_CultureText' has a wrong offset!");

}

