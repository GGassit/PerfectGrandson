#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CR_Mannequin_Procedural

#include "Basic.hpp"

#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "RigVM_classes.hpp"


namespace SDK
{

// RigVMMemoryStorageGeneratorClass CR_Mannequin_Procedural.RigVMMemory_Work
// 0x2AB8 (0x2AE0 - 0x0028)
class URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	struct FControlRigExecuteContext              ExecuteContext_;                                   // 0x0028(0x0038)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionMul_Result;             // 0x0060(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionInverse_3_Result;       // 0x0080(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_Twist;       // 0x00A0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___MathTransformMakeRelative_3_Local;    // 0x00C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_6_Transform;             // 0x0120(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_6_CachedIndex;           // 0x0180(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_6_1_Transform;           // 0x0190(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_6_1_CachedIndex;         // 0x01F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_Input;       // 0x0200(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_Swing;       // 0x0220(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSlerp_2_Result;         // 0x0240(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionInverse_2_Result;       // 0x0260(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_2_CachedIndex;            // 0x0280(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionSlerp_Result;           // 0x0290(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_2_1_CachedIndex;          // 0x02B0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___MathTransformLerp_Result;             // 0x02C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_Transform;               // 0x0320(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_CachedIndex;             // 0x0380(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_1_Transform;             // 0x0390(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_1_CachedIndex;           // 0x03F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___SetTranslation_Value;                 // 0x0400(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTranslation_CachedIndex;           // 0x0418(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_286D[0x8];                                     // 0x0428(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionSlerp_1_Result;         // 0x0430(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_2_1_1_CachedIndex;        // 0x0450(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___MathTransformLerp_1_Result;           // 0x0460(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___SetTranslation_1_Value;               // 0x04C0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTranslation_1_CachedIndex;         // 0x04D8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_286E[0x8];                                     // 0x04E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionMul_3_Result;           // 0x04F0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionInverse_3_3_Result;     // 0x0510(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_4_Twist;     // 0x0530(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___MathTransformMakeRelative_3_4_Local;  // 0x0550(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_6_2_Transform;           // 0x05B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_6_2_CachedIndex;         // 0x0610(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_6_1_1_Transform;         // 0x0620(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_6_1_1_CachedIndex;       // 0x0680(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_4_Input;     // 0x0690(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_4_Swing;     // 0x06B0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSlerp_2_3_Result;       // 0x06D0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionInverse_2_4_Result;     // 0x06F0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_2_1_2_CachedIndex;        // 0x0710(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionSlerp_4_Result;         // 0x0720(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_3_Twist;     // 0x0740(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___MathTransformMakeRelative_3_3_Local;  // 0x0760(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_5_1_Transform;           // 0x07C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_5_1_CachedIndex;         // 0x0820(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_5_Transform;             // 0x0830(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_5_CachedIndex;           // 0x0890(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_3_Input;     // 0x08A0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_3_Swing;     // 0x08C0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_1_CachedIndex;            // 0x08E0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___MathTransformLerp_1_3_Result;         // 0x08F0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_4_Transform;             // 0x0950(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_4_CachedIndex;           // 0x09B0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_1_3_Transform;           // 0x09C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_1_3_CachedIndex;         // 0x0A20(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___SetTranslation_5_Value;               // 0x0A30(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTranslation_5_CachedIndex;         // 0x0A48(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_286F[0x8];                                     // 0x0A58(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionSlerp_1_3_Result;       // 0x0A60(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_CachedIndex;              // 0x0A80(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___MathTransformLerp_4_Result;           // 0x0A90(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___SetTranslation_5_1_Value;             // 0x0AF0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTranslation_5_1_CachedIndex;       // 0x0B08(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_2870[0x8];                                     // 0x0B18(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionMul_1_Result;           // 0x0B20(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionInverse_3_1_Result;     // 0x0B40(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_Twist;     // 0x0B60(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___MathTransformMakeRelative_3_1_Local;  // 0x0B80(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_6_3_Transform;           // 0x0BE0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_6_3_CachedIndex;         // 0x0C40(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_6_1_2_Transform;         // 0x0C50(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_6_1_2_CachedIndex;       // 0x0CB0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_Input;     // 0x0CC0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_1_Swing;     // 0x0CE0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSlerp_2_1_Result;       // 0x0D00(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionInverse_2_1_Result;     // 0x0D20(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_2_2_CachedIndex;          // 0x0D40(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionSlerp_3_Result;         // 0x0D50(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_2_1_3_CachedIndex;        // 0x0D70(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___MathTransformLerp_2_Result;           // 0x0D80(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_2_Transform;             // 0x0DE0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_2_CachedIndex;           // 0x0E40(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_1_1_Transform;           // 0x0E50(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_1_1_CachedIndex;         // 0x0EB0(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___SetTranslation_2_Value;               // 0x0EC0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTranslation_2_CachedIndex;         // 0x0ED8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_2871[0x8];                                     // 0x0EE8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionSlerp_1_1_Result;       // 0x0EF0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_2_1_3_1_CachedIndex;      // 0x0F10(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___MathTransformLerp_1_1_Result;         // 0x0F20(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___SetTranslation_2_1_Value;             // 0x0F80(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTranslation_2_1_CachedIndex;       // 0x0F98(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_2872[0x8];                                     // 0x0FA8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionMul_3_1_Result;         // 0x0FB0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionInverse_3_3_1_Result;   // 0x0FD0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_4_1_Twist;   // 0x0FF0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___MathTransformMakeRelative_3_4_1_Local; // 0x1010(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_6_4_Transform;           // 0x1070(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_6_4_CachedIndex;         // 0x10D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_6_1_3_Transform;         // 0x10E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_6_1_3_CachedIndex;       // 0x1140(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_4_1_Input;   // 0x1150(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_4_1_Swing;   // 0x1170(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSlerp_2_3_1_Result;     // 0x1190(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionInverse_2_4_1_Result;   // 0x11B0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_2_1_3_1_1_CachedIndex;    // 0x11D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionSlerp_1_3_1_1_Result;   // 0x11E0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_3_1_Twist;   // 0x1200(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___MathTransformMakeRelative_3_3_1_Local; // 0x1220(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_6_5_Transform;           // 0x1280(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_6_5_CachedIndex;         // 0x12E0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_6_1_4_Transform;         // 0x12F0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_6_1_4_CachedIndex;       // 0x1350(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_3_1_Input;   // 0x1360(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_3_1_Swing;   // 0x1380(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_2_1_3_1_1_1_CachedIndex;  // 0x13A0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___MathTransformLerp_1_3_1_Result;       // 0x13B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_4_1_Transform;           // 0x1410(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_4_1_CachedIndex;         // 0x1470(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_1_3_1_Transform;         // 0x1480(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_1_3_1_CachedIndex;       // 0x14E0(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___SetTranslation_2_1_1_Value;           // 0x14F0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTranslation_2_1_1_CachedIndex;     // 0x1508(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_2873[0x8];                                     // 0x1518(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionSlerp_1_3_1_Result;     // 0x1520(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_2_1_3_1_1_1_1_CachedIndex; // 0x1540(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___MathTransformLerp_4_1_Result;         // 0x1550(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___SetTranslation_2_1_1_1_Value;         // 0x15B0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTranslation_2_1_1_1_CachedIndex;   // 0x15C8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_2874[0x8];                                     // 0x15D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionMul_2_Result;           // 0x15E0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionInverse_3_2_Result;     // 0x1600(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_2_Twist;     // 0x1620(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___MathTransformMakeRelative_3_2_Local;  // 0x1640(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_6_3_1_Transform;         // 0x16A0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_6_3_1_CachedIndex;       // 0x1700(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_6_1_2_1_Transform;       // 0x1710(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_6_1_2_1_CachedIndex;     // 0x1770(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_2_Input;     // 0x1780(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_2_Swing;     // 0x17A0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSlerp_2_2_Result;       // 0x17C0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionInverse_2_2_Result;     // 0x17E0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_2_2_1_CachedIndex;        // 0x1800(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_2_1_3_2_CachedIndex;      // 0x1810(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___MathTransformLerp_3_Result;           // 0x1820(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_3_Transform;             // 0x1880(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_3_CachedIndex;           // 0x18E0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_1_2_Transform;           // 0x18F0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_1_2_CachedIndex;         // 0x1950(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___SetTranslation_3_Value;               // 0x1960(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTranslation_3_CachedIndex;         // 0x1978(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_2875[0x8];                                     // 0x1988(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionSlerp_1_2_Result;       // 0x1990(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_3_CachedIndex;            // 0x19B0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___MathTransformLerp_1_2_Result;         // 0x19C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___SetTranslation_3_1_Value;             // 0x1A20(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTranslation_3_1_CachedIndex;       // 0x1A38(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_2876[0x8];                                     // 0x1A48(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionMul_2_2_Result;         // 0x1A50(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionInverse_3_2_2_Result;   // 0x1A70(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_2_2_Twist;   // 0x1A90(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___MathTransformMakeRelative_3_2_2_Local; // 0x1AB0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_6_3_1_1_Transform;       // 0x1B10(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_6_3_1_1_CachedIndex;     // 0x1B70(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_6_1_2_1_1_Transform;     // 0x1B80(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_6_1_2_1_1_CachedIndex;   // 0x1BE0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_2_2_Input;   // 0x1BF0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_2_2_Swing;   // 0x1C10(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSlerp_2_2_2_Result;     // 0x1C30(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionInverse_2_2_2_Result;   // 0x1C50(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_2_1_3_2_1_CachedIndex;    // 0x1C70(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionSlerp_2_2_2_1_Result;   // 0x1C80(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_2_2_1_Twist; // 0x1CA0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___MathTransformMakeRelative_3_2_2_1_Local; // 0x1CC0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_6_3_1_2_Transform;       // 0x1D20(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_6_3_1_2_CachedIndex;     // 0x1D80(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_6_1_2_1_2_Transform;     // 0x1D90(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_6_1_2_1_2_CachedIndex;   // 0x1DF0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_2_2_1_Input; // 0x1E00(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_2_2_1_Swing; // 0x1E20(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_2_1_3_2_1_1_CachedIndex;  // 0x1E40(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___MathTransformLerp_1_2_2_Result;       // 0x1E50(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_3_2_Transform;           // 0x1EB0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_3_2_CachedIndex;         // 0x1F10(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_1_2_2_Transform;         // 0x1F20(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_1_2_2_CachedIndex;       // 0x1F80(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___SetTranslation_3_1_1_Value;           // 0x1F90(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTranslation_3_1_1_CachedIndex;     // 0x1FA8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_2_1_3_2_1_1_1_CachedIndex; // 0x1FB8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_2877[0x8];                                     // 0x1FC8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___MathTransformLerp_3_2_Result;         // 0x1FD0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___SetTranslation_3_1_1_1_Value;         // 0x2030(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTranslation_3_1_1_1_CachedIndex;   // 0x2048(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_2878[0x8];                                     // 0x2058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionMul_2_1_Result;         // 0x2060(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionInverse_3_2_1_Result;   // 0x2080(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_2_1_Twist;   // 0x20A0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___MathTransformMakeRelative_3_2_1_Local; // 0x20C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_6_3_1_3_Transform;       // 0x2120(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_6_3_1_3_CachedIndex;     // 0x2180(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_6_1_2_1_3_Transform;     // 0x2190(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_6_1_2_1_3_CachedIndex;   // 0x21F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_2_1_Input;   // 0x2200(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_2_1_Swing;   // 0x2220(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSlerp_2_2_1_Result;     // 0x2240(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionInverse_2_2_1_Result;   // 0x2260(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_2_2_1_1_CachedIndex;      // 0x2280(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_2_1_3_2_2_CachedIndex;    // 0x2290(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___MathTransformLerp_3_1_Result;         // 0x22A0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_3_1_Transform;           // 0x2300(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_3_1_CachedIndex;         // 0x2360(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_1_2_1_Transform;         // 0x2370(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_1_2_1_CachedIndex;       // 0x23D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___SetTranslation_4_Value;               // 0x23E0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTranslation_4_CachedIndex;         // 0x23F8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_2879[0x8];                                     // 0x2408(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionSlerp_1_2_1_Result;     // 0x2410(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_3_1_CachedIndex;          // 0x2430(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___MathTransformLerp_1_2_1_Result;       // 0x2440(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___SetTranslation_4_1_Value;             // 0x24A0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTranslation_4_1_CachedIndex;       // 0x24B8(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_287A[0x8];                                     // 0x24C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___MathQuaternionMul_2_2_1_Result;       // 0x24D0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionInverse_3_2_2_1_Result; // 0x24F0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_2_2_2_Twist; // 0x2510(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___MathTransformMakeRelative_3_2_2_2_Local; // 0x2530(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_6_3_1_4_Transform;       // 0x2590(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_6_3_1_4_CachedIndex;     // 0x25F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_6_1_2_1_4_Transform;     // 0x2600(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_6_1_2_1_4_CachedIndex;   // 0x2660(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_2_2_2_Input; // 0x2670(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_2_2_2_Swing; // 0x2690(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSlerp_2_2_2_2_Result;   // 0x26B0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionInverse_2_2_2_1_Result; // 0x26D0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_3_2_CachedIndex;          // 0x26F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionSlerp_2_2_2_1_1_Result; // 0x2700(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_2_2_1_1_Twist; // 0x2720(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___MathTransformMakeRelative_3_2_2_1_1_Local; // 0x2740(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_6_3_1_5_Transform;       // 0x27A0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_6_3_1_5_CachedIndex;     // 0x2800(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_6_1_2_1_5_Transform;     // 0x2810(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_6_1_2_1_5_CachedIndex;   // 0x2870(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_2_2_1_1_Input; // 0x2880(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSwingTwist_2_2_1_1_Swing; // 0x28A0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_3_2_1_CachedIndex;        // 0x28C0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___MathTransformLerp_1_2_2_1_Result;     // 0x28D0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_3_2_1_Transform;         // 0x2930(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_3_2_1_CachedIndex;       // 0x2990(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_1_2_2_1_Transform;       // 0x29A0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_1_2_2_1_CachedIndex;     // 0x2A00(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___SetTranslation_4_1_1_Value;           // 0x2A10(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTranslation_4_1_1_CachedIndex;     // 0x2A28(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___SetRotation_3_2_1_1_CachedIndex;      // 0x2A38(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_287B[0x8];                                     // 0x2A48(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___MathTransformLerp_3_2_1_Result;       // 0x2A50(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___SetTranslation_4_1_2_Value;           // 0x2AB0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___SetTranslation_4_1_2_CachedIndex;     // 0x2AC8(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemory_Work">();
	}
	static class URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<URigVMMemory_Work>();
	}
};
static_assert(alignof(URigVMMemory_Work) == 0x000010, "Wrong alignment on URigVMMemory_Work");
static_assert(sizeof(URigVMMemory_Work) == 0x002AE0, "Wrong size on URigVMMemory_Work");
static_assert(offsetof(URigVMMemory_Work, ExecuteContext_) == 0x000028, "Member 'URigVMMemory_Work::ExecuteContext_' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionMul_Result) == 0x000060, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionMul_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionInverse_3_Result) == 0x000080, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionInverse_3_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_Twist) == 0x0000A0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_Twist' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformMakeRelative_3_Local) == 0x0000C0, "Member 'URigVMMemory_Work::RigVMModel___MathTransformMakeRelative_3_Local' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_Transform) == 0x000120, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_CachedIndex) == 0x000180, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_1_Transform) == 0x000190, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_1_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_1_CachedIndex) == 0x0001F0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_Input) == 0x000200, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_Input' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_Swing) == 0x000220, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_Swing' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSlerp_2_Result) == 0x000240, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSlerp_2_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionInverse_2_Result) == 0x000260, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionInverse_2_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetRotation_2_CachedIndex) == 0x000280, "Member 'URigVMMemory_Work::RigVMModel___SetRotation_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSlerp_Result) == 0x000290, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSlerp_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetRotation_2_1_CachedIndex) == 0x0002B0, "Member 'URigVMMemory_Work::RigVMModel___SetRotation_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformLerp_Result) == 0x0002C0, "Member 'URigVMMemory_Work::RigVMModel___MathTransformLerp_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_Transform) == 0x000320, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_CachedIndex) == 0x000380, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_1_Transform) == 0x000390, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_1_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_1_CachedIndex) == 0x0003F0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_Value) == 0x000400, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_CachedIndex) == 0x000418, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSlerp_1_Result) == 0x000430, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSlerp_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetRotation_2_1_1_CachedIndex) == 0x000450, "Member 'URigVMMemory_Work::RigVMModel___SetRotation_2_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformLerp_1_Result) == 0x000460, "Member 'URigVMMemory_Work::RigVMModel___MathTransformLerp_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_1_Value) == 0x0004C0, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_1_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_1_CachedIndex) == 0x0004D8, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionMul_3_Result) == 0x0004F0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionMul_3_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionInverse_3_3_Result) == 0x000510, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionInverse_3_3_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_4_Twist) == 0x000530, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_4_Twist' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformMakeRelative_3_4_Local) == 0x000550, "Member 'URigVMMemory_Work::RigVMModel___MathTransformMakeRelative_3_4_Local' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_2_Transform) == 0x0005B0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_2_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_2_CachedIndex) == 0x000610, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_1_1_Transform) == 0x000620, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_1_1_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_1_1_CachedIndex) == 0x000680, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_4_Input) == 0x000690, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_4_Input' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_4_Swing) == 0x0006B0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_4_Swing' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSlerp_2_3_Result) == 0x0006D0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSlerp_2_3_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionInverse_2_4_Result) == 0x0006F0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionInverse_2_4_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetRotation_2_1_2_CachedIndex) == 0x000710, "Member 'URigVMMemory_Work::RigVMModel___SetRotation_2_1_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSlerp_4_Result) == 0x000720, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSlerp_4_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_3_Twist) == 0x000740, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_3_Twist' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformMakeRelative_3_3_Local) == 0x000760, "Member 'URigVMMemory_Work::RigVMModel___MathTransformMakeRelative_3_3_Local' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_5_1_Transform) == 0x0007C0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_5_1_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_5_1_CachedIndex) == 0x000820, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_5_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_5_Transform) == 0x000830, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_5_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_5_CachedIndex) == 0x000890, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_5_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_3_Input) == 0x0008A0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_3_Input' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_3_Swing) == 0x0008C0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_3_Swing' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetRotation_1_CachedIndex) == 0x0008E0, "Member 'URigVMMemory_Work::RigVMModel___SetRotation_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformLerp_1_3_Result) == 0x0008F0, "Member 'URigVMMemory_Work::RigVMModel___MathTransformLerp_1_3_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_4_Transform) == 0x000950, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_4_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_4_CachedIndex) == 0x0009B0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_4_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_1_3_Transform) == 0x0009C0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_1_3_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_1_3_CachedIndex) == 0x000A20, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_1_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_5_Value) == 0x000A30, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_5_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_5_CachedIndex) == 0x000A48, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_5_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSlerp_1_3_Result) == 0x000A60, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSlerp_1_3_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetRotation_CachedIndex) == 0x000A80, "Member 'URigVMMemory_Work::RigVMModel___SetRotation_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformLerp_4_Result) == 0x000A90, "Member 'URigVMMemory_Work::RigVMModel___MathTransformLerp_4_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_5_1_Value) == 0x000AF0, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_5_1_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_5_1_CachedIndex) == 0x000B08, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_5_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionMul_1_Result) == 0x000B20, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionMul_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionInverse_3_1_Result) == 0x000B40, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionInverse_3_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_Twist) == 0x000B60, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_Twist' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformMakeRelative_3_1_Local) == 0x000B80, "Member 'URigVMMemory_Work::RigVMModel___MathTransformMakeRelative_3_1_Local' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_3_Transform) == 0x000BE0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_3_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_3_CachedIndex) == 0x000C40, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_1_2_Transform) == 0x000C50, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_1_2_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_1_2_CachedIndex) == 0x000CB0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_1_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_Input) == 0x000CC0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_Input' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_1_Swing) == 0x000CE0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_1_Swing' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSlerp_2_1_Result) == 0x000D00, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSlerp_2_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionInverse_2_1_Result) == 0x000D20, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionInverse_2_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetRotation_2_2_CachedIndex) == 0x000D40, "Member 'URigVMMemory_Work::RigVMModel___SetRotation_2_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSlerp_3_Result) == 0x000D50, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSlerp_3_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetRotation_2_1_3_CachedIndex) == 0x000D70, "Member 'URigVMMemory_Work::RigVMModel___SetRotation_2_1_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformLerp_2_Result) == 0x000D80, "Member 'URigVMMemory_Work::RigVMModel___MathTransformLerp_2_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_2_Transform) == 0x000DE0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_2_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_2_CachedIndex) == 0x000E40, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_1_1_Transform) == 0x000E50, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_1_1_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_1_1_CachedIndex) == 0x000EB0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_2_Value) == 0x000EC0, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_2_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_2_CachedIndex) == 0x000ED8, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSlerp_1_1_Result) == 0x000EF0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSlerp_1_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetRotation_2_1_3_1_CachedIndex) == 0x000F10, "Member 'URigVMMemory_Work::RigVMModel___SetRotation_2_1_3_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformLerp_1_1_Result) == 0x000F20, "Member 'URigVMMemory_Work::RigVMModel___MathTransformLerp_1_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_2_1_Value) == 0x000F80, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_2_1_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_2_1_CachedIndex) == 0x000F98, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionMul_3_1_Result) == 0x000FB0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionMul_3_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionInverse_3_3_1_Result) == 0x000FD0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionInverse_3_3_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_4_1_Twist) == 0x000FF0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_4_1_Twist' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformMakeRelative_3_4_1_Local) == 0x001010, "Member 'URigVMMemory_Work::RigVMModel___MathTransformMakeRelative_3_4_1_Local' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_4_Transform) == 0x001070, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_4_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_4_CachedIndex) == 0x0010D0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_4_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_1_3_Transform) == 0x0010E0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_1_3_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_1_3_CachedIndex) == 0x001140, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_1_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_4_1_Input) == 0x001150, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_4_1_Input' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_4_1_Swing) == 0x001170, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_4_1_Swing' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSlerp_2_3_1_Result) == 0x001190, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSlerp_2_3_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionInverse_2_4_1_Result) == 0x0011B0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionInverse_2_4_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetRotation_2_1_3_1_1_CachedIndex) == 0x0011D0, "Member 'URigVMMemory_Work::RigVMModel___SetRotation_2_1_3_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSlerp_1_3_1_1_Result) == 0x0011E0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSlerp_1_3_1_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_3_1_Twist) == 0x001200, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_3_1_Twist' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformMakeRelative_3_3_1_Local) == 0x001220, "Member 'URigVMMemory_Work::RigVMModel___MathTransformMakeRelative_3_3_1_Local' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_5_Transform) == 0x001280, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_5_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_5_CachedIndex) == 0x0012E0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_5_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_1_4_Transform) == 0x0012F0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_1_4_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_1_4_CachedIndex) == 0x001350, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_1_4_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_3_1_Input) == 0x001360, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_3_1_Input' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_3_1_Swing) == 0x001380, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_3_1_Swing' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetRotation_2_1_3_1_1_1_CachedIndex) == 0x0013A0, "Member 'URigVMMemory_Work::RigVMModel___SetRotation_2_1_3_1_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformLerp_1_3_1_Result) == 0x0013B0, "Member 'URigVMMemory_Work::RigVMModel___MathTransformLerp_1_3_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_4_1_Transform) == 0x001410, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_4_1_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_4_1_CachedIndex) == 0x001470, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_4_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_1_3_1_Transform) == 0x001480, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_1_3_1_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_1_3_1_CachedIndex) == 0x0014E0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_1_3_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_2_1_1_Value) == 0x0014F0, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_2_1_1_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_2_1_1_CachedIndex) == 0x001508, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_2_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSlerp_1_3_1_Result) == 0x001520, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSlerp_1_3_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetRotation_2_1_3_1_1_1_1_CachedIndex) == 0x001540, "Member 'URigVMMemory_Work::RigVMModel___SetRotation_2_1_3_1_1_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformLerp_4_1_Result) == 0x001550, "Member 'URigVMMemory_Work::RigVMModel___MathTransformLerp_4_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_2_1_1_1_Value) == 0x0015B0, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_2_1_1_1_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_2_1_1_1_CachedIndex) == 0x0015C8, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_2_1_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionMul_2_Result) == 0x0015E0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionMul_2_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionInverse_3_2_Result) == 0x001600, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionInverse_3_2_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_2_Twist) == 0x001620, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_2_Twist' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformMakeRelative_3_2_Local) == 0x001640, "Member 'URigVMMemory_Work::RigVMModel___MathTransformMakeRelative_3_2_Local' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_3_1_Transform) == 0x0016A0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_3_1_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_3_1_CachedIndex) == 0x001700, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_3_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_1_2_1_Transform) == 0x001710, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_1_2_1_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_1_2_1_CachedIndex) == 0x001770, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_1_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_2_Input) == 0x001780, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_2_Input' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_2_Swing) == 0x0017A0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_2_Swing' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSlerp_2_2_Result) == 0x0017C0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSlerp_2_2_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionInverse_2_2_Result) == 0x0017E0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionInverse_2_2_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetRotation_2_2_1_CachedIndex) == 0x001800, "Member 'URigVMMemory_Work::RigVMModel___SetRotation_2_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetRotation_2_1_3_2_CachedIndex) == 0x001810, "Member 'URigVMMemory_Work::RigVMModel___SetRotation_2_1_3_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformLerp_3_Result) == 0x001820, "Member 'URigVMMemory_Work::RigVMModel___MathTransformLerp_3_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_3_Transform) == 0x001880, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_3_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_3_CachedIndex) == 0x0018E0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_1_2_Transform) == 0x0018F0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_1_2_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_1_2_CachedIndex) == 0x001950, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_1_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_3_Value) == 0x001960, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_3_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_3_CachedIndex) == 0x001978, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSlerp_1_2_Result) == 0x001990, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSlerp_1_2_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetRotation_3_CachedIndex) == 0x0019B0, "Member 'URigVMMemory_Work::RigVMModel___SetRotation_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformLerp_1_2_Result) == 0x0019C0, "Member 'URigVMMemory_Work::RigVMModel___MathTransformLerp_1_2_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_3_1_Value) == 0x001A20, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_3_1_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_3_1_CachedIndex) == 0x001A38, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_3_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionMul_2_2_Result) == 0x001A50, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionMul_2_2_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionInverse_3_2_2_Result) == 0x001A70, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionInverse_3_2_2_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_2_2_Twist) == 0x001A90, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_2_2_Twist' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformMakeRelative_3_2_2_Local) == 0x001AB0, "Member 'URigVMMemory_Work::RigVMModel___MathTransformMakeRelative_3_2_2_Local' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_3_1_1_Transform) == 0x001B10, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_3_1_1_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_3_1_1_CachedIndex) == 0x001B70, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_3_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_1_2_1_1_Transform) == 0x001B80, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_1_2_1_1_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_1_2_1_1_CachedIndex) == 0x001BE0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_1_2_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_2_2_Input) == 0x001BF0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_2_2_Input' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_2_2_Swing) == 0x001C10, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_2_2_Swing' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSlerp_2_2_2_Result) == 0x001C30, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSlerp_2_2_2_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionInverse_2_2_2_Result) == 0x001C50, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionInverse_2_2_2_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetRotation_2_1_3_2_1_CachedIndex) == 0x001C70, "Member 'URigVMMemory_Work::RigVMModel___SetRotation_2_1_3_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSlerp_2_2_2_1_Result) == 0x001C80, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSlerp_2_2_2_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_2_2_1_Twist) == 0x001CA0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_2_2_1_Twist' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformMakeRelative_3_2_2_1_Local) == 0x001CC0, "Member 'URigVMMemory_Work::RigVMModel___MathTransformMakeRelative_3_2_2_1_Local' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_3_1_2_Transform) == 0x001D20, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_3_1_2_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_3_1_2_CachedIndex) == 0x001D80, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_3_1_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_1_2_1_2_Transform) == 0x001D90, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_1_2_1_2_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_1_2_1_2_CachedIndex) == 0x001DF0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_1_2_1_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_2_2_1_Input) == 0x001E00, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_2_2_1_Input' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_2_2_1_Swing) == 0x001E20, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_2_2_1_Swing' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetRotation_2_1_3_2_1_1_CachedIndex) == 0x001E40, "Member 'URigVMMemory_Work::RigVMModel___SetRotation_2_1_3_2_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformLerp_1_2_2_Result) == 0x001E50, "Member 'URigVMMemory_Work::RigVMModel___MathTransformLerp_1_2_2_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_3_2_Transform) == 0x001EB0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_3_2_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_3_2_CachedIndex) == 0x001F10, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_3_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_1_2_2_Transform) == 0x001F20, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_1_2_2_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_1_2_2_CachedIndex) == 0x001F80, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_1_2_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_3_1_1_Value) == 0x001F90, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_3_1_1_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_3_1_1_CachedIndex) == 0x001FA8, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_3_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetRotation_2_1_3_2_1_1_1_CachedIndex) == 0x001FB8, "Member 'URigVMMemory_Work::RigVMModel___SetRotation_2_1_3_2_1_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformLerp_3_2_Result) == 0x001FD0, "Member 'URigVMMemory_Work::RigVMModel___MathTransformLerp_3_2_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_3_1_1_1_Value) == 0x002030, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_3_1_1_1_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_3_1_1_1_CachedIndex) == 0x002048, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_3_1_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionMul_2_1_Result) == 0x002060, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionMul_2_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionInverse_3_2_1_Result) == 0x002080, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionInverse_3_2_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_2_1_Twist) == 0x0020A0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_2_1_Twist' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformMakeRelative_3_2_1_Local) == 0x0020C0, "Member 'URigVMMemory_Work::RigVMModel___MathTransformMakeRelative_3_2_1_Local' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_3_1_3_Transform) == 0x002120, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_3_1_3_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_3_1_3_CachedIndex) == 0x002180, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_3_1_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_1_2_1_3_Transform) == 0x002190, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_1_2_1_3_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_1_2_1_3_CachedIndex) == 0x0021F0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_1_2_1_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_2_1_Input) == 0x002200, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_2_1_Input' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_2_1_Swing) == 0x002220, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_2_1_Swing' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSlerp_2_2_1_Result) == 0x002240, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSlerp_2_2_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionInverse_2_2_1_Result) == 0x002260, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionInverse_2_2_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetRotation_2_2_1_1_CachedIndex) == 0x002280, "Member 'URigVMMemory_Work::RigVMModel___SetRotation_2_2_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetRotation_2_1_3_2_2_CachedIndex) == 0x002290, "Member 'URigVMMemory_Work::RigVMModel___SetRotation_2_1_3_2_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformLerp_3_1_Result) == 0x0022A0, "Member 'URigVMMemory_Work::RigVMModel___MathTransformLerp_3_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_3_1_Transform) == 0x002300, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_3_1_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_3_1_CachedIndex) == 0x002360, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_3_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_1_2_1_Transform) == 0x002370, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_1_2_1_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_1_2_1_CachedIndex) == 0x0023D0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_1_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_4_Value) == 0x0023E0, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_4_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_4_CachedIndex) == 0x0023F8, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_4_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSlerp_1_2_1_Result) == 0x002410, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSlerp_1_2_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetRotation_3_1_CachedIndex) == 0x002430, "Member 'URigVMMemory_Work::RigVMModel___SetRotation_3_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformLerp_1_2_1_Result) == 0x002440, "Member 'URigVMMemory_Work::RigVMModel___MathTransformLerp_1_2_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_4_1_Value) == 0x0024A0, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_4_1_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_4_1_CachedIndex) == 0x0024B8, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_4_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionMul_2_2_1_Result) == 0x0024D0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionMul_2_2_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionInverse_3_2_2_1_Result) == 0x0024F0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionInverse_3_2_2_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_2_2_2_Twist) == 0x002510, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_2_2_2_Twist' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformMakeRelative_3_2_2_2_Local) == 0x002530, "Member 'URigVMMemory_Work::RigVMModel___MathTransformMakeRelative_3_2_2_2_Local' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_3_1_4_Transform) == 0x002590, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_3_1_4_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_3_1_4_CachedIndex) == 0x0025F0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_3_1_4_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_1_2_1_4_Transform) == 0x002600, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_1_2_1_4_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_1_2_1_4_CachedIndex) == 0x002660, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_1_2_1_4_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_2_2_2_Input) == 0x002670, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_2_2_2_Input' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_2_2_2_Swing) == 0x002690, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_2_2_2_Swing' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSlerp_2_2_2_2_Result) == 0x0026B0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSlerp_2_2_2_2_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionInverse_2_2_2_1_Result) == 0x0026D0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionInverse_2_2_2_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetRotation_3_2_CachedIndex) == 0x0026F0, "Member 'URigVMMemory_Work::RigVMModel___SetRotation_3_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSlerp_2_2_2_1_1_Result) == 0x002700, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSlerp_2_2_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_2_2_1_1_Twist) == 0x002720, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_2_2_1_1_Twist' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformMakeRelative_3_2_2_1_1_Local) == 0x002740, "Member 'URigVMMemory_Work::RigVMModel___MathTransformMakeRelative_3_2_2_1_1_Local' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_3_1_5_Transform) == 0x0027A0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_3_1_5_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_3_1_5_CachedIndex) == 0x002800, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_3_1_5_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_1_2_1_5_Transform) == 0x002810, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_1_2_1_5_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_6_1_2_1_5_CachedIndex) == 0x002870, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_6_1_2_1_5_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_2_2_1_1_Input) == 0x002880, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_2_2_1_1_Input' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathQuaternionSwingTwist_2_2_1_1_Swing) == 0x0028A0, "Member 'URigVMMemory_Work::RigVMModel___MathQuaternionSwingTwist_2_2_1_1_Swing' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetRotation_3_2_1_CachedIndex) == 0x0028C0, "Member 'URigVMMemory_Work::RigVMModel___SetRotation_3_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformLerp_1_2_2_1_Result) == 0x0028D0, "Member 'URigVMMemory_Work::RigVMModel___MathTransformLerp_1_2_2_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_3_2_1_Transform) == 0x002930, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_3_2_1_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_3_2_1_CachedIndex) == 0x002990, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_3_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_1_2_2_1_Transform) == 0x0029A0, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_1_2_2_1_Transform' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___GetTransform_1_2_2_1_CachedIndex) == 0x002A00, "Member 'URigVMMemory_Work::RigVMModel___GetTransform_1_2_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_4_1_1_Value) == 0x002A10, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_4_1_1_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_4_1_1_CachedIndex) == 0x002A28, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_4_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetRotation_3_2_1_1_CachedIndex) == 0x002A38, "Member 'URigVMMemory_Work::RigVMModel___SetRotation_3_2_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___MathTransformLerp_3_2_1_Result) == 0x002A50, "Member 'URigVMMemory_Work::RigVMModel___MathTransformLerp_3_2_1_Result' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_4_1_2_Value) == 0x002AB0, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_4_1_2_Value' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Work, RigVMModel___SetTranslation_4_1_2_CachedIndex) == 0x002AC8, "Member 'URigVMMemory_Work::RigVMModel___SetTranslation_4_1_2_CachedIndex' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass CR_Mannequin_Procedural.RigVMMemory_Literal
// 0x0228 (0x0250 - 0x0028)
class URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	struct FRigElementKey                         RigVMModel___SetRotation_2_Item__Const;            // 0x0028(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         RigVMModel___SetRotation_2_Space__Const;           // 0x0034(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___SetRotation_2_bInitial__Const : 1;    // 0x0035(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_287C[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         RigVMModel___GetTransform_6_Item__Const;           // 0x0038(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         RigVMModel___GetTransform_6_1_bInitial__Const : 1; // 0x0044(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash))
	uint8                                         Pad_287D[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___MathQuaternionSwingTwist_TwistAxis__Const; // 0x0048(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___MathQuaternionSlerp_2_B__Const;       // 0x0060(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathQuaternionSlerp_2_T__Const;       // 0x0080(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SetRotation_2_Weight__Const;          // 0x0084(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_2_1_Item__Const;          // 0x0088(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathQuaternionSlerp_T__Const;         // 0x0094(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EBoneGetterSetterMode                         RigVMModel___SetTranslation_Space__Const;          // 0x0098(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_287E[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         RigVMModel___GetTransform_1_Item__Const;           // 0x009C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathTransformLerp_T__Const;           // 0x00A8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_2_1_1_Item__Const;        // 0x00AC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathQuaternionSlerp_1_T__Const;       // 0x00B8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathTransformLerp_1_T__Const;         // 0x00BC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_2_1_2_Item__Const;        // 0x00C0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathQuaternionSlerp_2_3_T__Const;     // 0x00CC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_1_Item__Const;            // 0x00D0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___GetTransform_5_1_Item__Const;         // 0x00DC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathQuaternionSlerp_4_T__Const;       // 0x00E8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_Item__Const;              // 0x00EC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_2_2_Item__Const;          // 0x00F8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___GetTransform_6_3_Item__Const;         // 0x0104(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_2_1_3_Item__Const;        // 0x0110(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___GetTransform_1_1_Item__Const;         // 0x011C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_2_1_3_1_Item__Const;      // 0x0128(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_2_1_3_1_1_Item__Const;    // 0x0134(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_2_1_3_1_1_1_Item__Const;  // 0x0140(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___GetTransform_6_5_Item__Const;         // 0x014C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_2_1_3_1_1_1_1_Item__Const; // 0x0158(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_2_2_1_Item__Const;        // 0x0164(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___GetTransform_6_3_1_Item__Const;       // 0x0170(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___MathQuaternionSlerp_2_2_T__Const;     // 0x017C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_2_1_3_2_Item__Const;      // 0x0180(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___GetTransform_1_2_Item__Const;         // 0x018C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_3_Item__Const;            // 0x0198(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_2_1_3_2_1_Item__Const;    // 0x01A4(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_2_1_3_2_1_1_Item__Const;  // 0x01B0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___GetTransform_6_3_1_2_Item__Const;     // 0x01BC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_2_1_3_2_1_1_1_Item__Const; // 0x01C8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_2_2_1_1_Item__Const;      // 0x01D4(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___GetTransform_6_3_1_3_Item__Const;     // 0x01E0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_2_1_3_2_2_Item__Const;    // 0x01EC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___GetTransform_1_2_1_Item__Const;       // 0x01F8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_3_1_Item__Const;          // 0x0204(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_3_2_Item__Const;          // 0x0210(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_3_2_1_Item__Const;        // 0x021C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___GetTransform_6_3_1_5_Item__Const;     // 0x0228(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetRotation_3_2_1_1_Item__Const;      // 0x0234(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SetTranslation_4_1_2_Item__Const;     // 0x0240(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemory_Literal">();
	}
	static class URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<URigVMMemory_Literal>();
	}
};
static_assert(alignof(URigVMMemory_Literal) == 0x000010, "Wrong alignment on URigVMMemory_Literal");
static_assert(sizeof(URigVMMemory_Literal) == 0x000250, "Wrong size on URigVMMemory_Literal");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetRotation_2_Item__Const) == 0x000028, "Member 'URigVMMemory_Literal::RigVMModel___SetRotation_2_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetRotation_2_Space__Const) == 0x000034, "Member 'URigVMMemory_Literal::RigVMModel___SetRotation_2_Space__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___GetTransform_6_Item__Const) == 0x000038, "Member 'URigVMMemory_Literal::RigVMModel___GetTransform_6_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___MathQuaternionSwingTwist_TwistAxis__Const) == 0x000048, "Member 'URigVMMemory_Literal::RigVMModel___MathQuaternionSwingTwist_TwistAxis__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___MathQuaternionSlerp_2_B__Const) == 0x000060, "Member 'URigVMMemory_Literal::RigVMModel___MathQuaternionSlerp_2_B__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___MathQuaternionSlerp_2_T__Const) == 0x000080, "Member 'URigVMMemory_Literal::RigVMModel___MathQuaternionSlerp_2_T__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetRotation_2_Weight__Const) == 0x000084, "Member 'URigVMMemory_Literal::RigVMModel___SetRotation_2_Weight__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetRotation_2_1_Item__Const) == 0x000088, "Member 'URigVMMemory_Literal::RigVMModel___SetRotation_2_1_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___MathQuaternionSlerp_T__Const) == 0x000094, "Member 'URigVMMemory_Literal::RigVMModel___MathQuaternionSlerp_T__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetTranslation_Space__Const) == 0x000098, "Member 'URigVMMemory_Literal::RigVMModel___SetTranslation_Space__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___GetTransform_1_Item__Const) == 0x00009C, "Member 'URigVMMemory_Literal::RigVMModel___GetTransform_1_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___MathTransformLerp_T__Const) == 0x0000A8, "Member 'URigVMMemory_Literal::RigVMModel___MathTransformLerp_T__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetRotation_2_1_1_Item__Const) == 0x0000AC, "Member 'URigVMMemory_Literal::RigVMModel___SetRotation_2_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___MathQuaternionSlerp_1_T__Const) == 0x0000B8, "Member 'URigVMMemory_Literal::RigVMModel___MathQuaternionSlerp_1_T__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___MathTransformLerp_1_T__Const) == 0x0000BC, "Member 'URigVMMemory_Literal::RigVMModel___MathTransformLerp_1_T__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetRotation_2_1_2_Item__Const) == 0x0000C0, "Member 'URigVMMemory_Literal::RigVMModel___SetRotation_2_1_2_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___MathQuaternionSlerp_2_3_T__Const) == 0x0000CC, "Member 'URigVMMemory_Literal::RigVMModel___MathQuaternionSlerp_2_3_T__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetRotation_1_Item__Const) == 0x0000D0, "Member 'URigVMMemory_Literal::RigVMModel___SetRotation_1_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___GetTransform_5_1_Item__Const) == 0x0000DC, "Member 'URigVMMemory_Literal::RigVMModel___GetTransform_5_1_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___MathQuaternionSlerp_4_T__Const) == 0x0000E8, "Member 'URigVMMemory_Literal::RigVMModel___MathQuaternionSlerp_4_T__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetRotation_Item__Const) == 0x0000EC, "Member 'URigVMMemory_Literal::RigVMModel___SetRotation_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetRotation_2_2_Item__Const) == 0x0000F8, "Member 'URigVMMemory_Literal::RigVMModel___SetRotation_2_2_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___GetTransform_6_3_Item__Const) == 0x000104, "Member 'URigVMMemory_Literal::RigVMModel___GetTransform_6_3_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetRotation_2_1_3_Item__Const) == 0x000110, "Member 'URigVMMemory_Literal::RigVMModel___SetRotation_2_1_3_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___GetTransform_1_1_Item__Const) == 0x00011C, "Member 'URigVMMemory_Literal::RigVMModel___GetTransform_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetRotation_2_1_3_1_Item__Const) == 0x000128, "Member 'URigVMMemory_Literal::RigVMModel___SetRotation_2_1_3_1_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetRotation_2_1_3_1_1_Item__Const) == 0x000134, "Member 'URigVMMemory_Literal::RigVMModel___SetRotation_2_1_3_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetRotation_2_1_3_1_1_1_Item__Const) == 0x000140, "Member 'URigVMMemory_Literal::RigVMModel___SetRotation_2_1_3_1_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___GetTransform_6_5_Item__Const) == 0x00014C, "Member 'URigVMMemory_Literal::RigVMModel___GetTransform_6_5_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetRotation_2_1_3_1_1_1_1_Item__Const) == 0x000158, "Member 'URigVMMemory_Literal::RigVMModel___SetRotation_2_1_3_1_1_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetRotation_2_2_1_Item__Const) == 0x000164, "Member 'URigVMMemory_Literal::RigVMModel___SetRotation_2_2_1_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___GetTransform_6_3_1_Item__Const) == 0x000170, "Member 'URigVMMemory_Literal::RigVMModel___GetTransform_6_3_1_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___MathQuaternionSlerp_2_2_T__Const) == 0x00017C, "Member 'URigVMMemory_Literal::RigVMModel___MathQuaternionSlerp_2_2_T__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetRotation_2_1_3_2_Item__Const) == 0x000180, "Member 'URigVMMemory_Literal::RigVMModel___SetRotation_2_1_3_2_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___GetTransform_1_2_Item__Const) == 0x00018C, "Member 'URigVMMemory_Literal::RigVMModel___GetTransform_1_2_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetRotation_3_Item__Const) == 0x000198, "Member 'URigVMMemory_Literal::RigVMModel___SetRotation_3_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetRotation_2_1_3_2_1_Item__Const) == 0x0001A4, "Member 'URigVMMemory_Literal::RigVMModel___SetRotation_2_1_3_2_1_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetRotation_2_1_3_2_1_1_Item__Const) == 0x0001B0, "Member 'URigVMMemory_Literal::RigVMModel___SetRotation_2_1_3_2_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___GetTransform_6_3_1_2_Item__Const) == 0x0001BC, "Member 'URigVMMemory_Literal::RigVMModel___GetTransform_6_3_1_2_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetRotation_2_1_3_2_1_1_1_Item__Const) == 0x0001C8, "Member 'URigVMMemory_Literal::RigVMModel___SetRotation_2_1_3_2_1_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetRotation_2_2_1_1_Item__Const) == 0x0001D4, "Member 'URigVMMemory_Literal::RigVMModel___SetRotation_2_2_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___GetTransform_6_3_1_3_Item__Const) == 0x0001E0, "Member 'URigVMMemory_Literal::RigVMModel___GetTransform_6_3_1_3_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetRotation_2_1_3_2_2_Item__Const) == 0x0001EC, "Member 'URigVMMemory_Literal::RigVMModel___SetRotation_2_1_3_2_2_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___GetTransform_1_2_1_Item__Const) == 0x0001F8, "Member 'URigVMMemory_Literal::RigVMModel___GetTransform_1_2_1_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetRotation_3_1_Item__Const) == 0x000204, "Member 'URigVMMemory_Literal::RigVMModel___SetRotation_3_1_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetRotation_3_2_Item__Const) == 0x000210, "Member 'URigVMMemory_Literal::RigVMModel___SetRotation_3_2_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetRotation_3_2_1_Item__Const) == 0x00021C, "Member 'URigVMMemory_Literal::RigVMModel___SetRotation_3_2_1_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___GetTransform_6_3_1_5_Item__Const) == 0x000228, "Member 'URigVMMemory_Literal::RigVMModel___GetTransform_6_3_1_5_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetRotation_3_2_1_1_Item__Const) == 0x000234, "Member 'URigVMMemory_Literal::RigVMModel___SetRotation_3_2_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(URigVMMemory_Literal, RigVMModel___SetTranslation_4_1_2_Item__Const) == 0x000240, "Member 'URigVMMemory_Literal::RigVMModel___SetTranslation_4_1_2_Item__Const' has a wrong offset!");

// ControlRigBlueprintGeneratedClass CR_Mannequin_Procedural.CR_Mannequin_Procedural_C
// 0x0000 (0x0560 - 0x0560)
class UCR_Mannequin_Procedural_C final : public UControlRig
{
public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CR_Mannequin_Procedural_C">();
	}
	static class UCR_Mannequin_Procedural_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCR_Mannequin_Procedural_C>();
	}
};
static_assert(alignof(UCR_Mannequin_Procedural_C) == 0x000008, "Wrong alignment on UCR_Mannequin_Procedural_C");
static_assert(sizeof(UCR_Mannequin_Procedural_C) == 0x000560, "Wrong size on UCR_Mannequin_Procedural_C");

}

