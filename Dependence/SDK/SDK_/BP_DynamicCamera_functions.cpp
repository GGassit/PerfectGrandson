#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DynamicCamera

#include "Basic.hpp"

#include "BP_DynamicCamera_classes.hpp"
#include "BP_DynamicCamera_parameters.hpp"


namespace SDK
{

// Function BP_DynamicCamera.BP_DynamicCamera_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_DynamicCamera_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicCamera_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicCamera.BP_DynamicCamera_C.ExecuteUbergraph_BP_DynamicCamera
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_DynamicCamera_C::ExecuteUbergraph_BP_DynamicCamera(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicCamera_C", "ExecuteUbergraph_BP_DynamicCamera");

	Params::BP_DynamicCamera_C_ExecuteUbergraph_BP_DynamicCamera Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DynamicCamera.BP_DynamicCamera_C.CameraTick
// (BlueprintCallable, BlueprintEvent)

void UBP_DynamicCamera_C::CameraTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicCamera_C", "CameraTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DynamicCamera.BP_DynamicCamera_C.CameraIncline
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCameraComponent*                 Camera                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  RightAxis                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ForwardAxis                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCharacterMovementComponent*      Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Param_ForceForwardShake                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ForwardShakeHardness                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_DynamicCamera_C::CameraIncline(class UCameraComponent* Camera, double RightAxis, double ForwardAxis, class UCharacterMovementComponent* Player, double Force, double Param_ForceForwardShake, double ForwardShakeHardness)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DynamicCamera_C", "CameraIncline");

	Params::BP_DynamicCamera_C_CameraIncline Parms{};

	Parms.Camera = Camera;
	Parms.RightAxis = RightAxis;
	Parms.ForwardAxis = ForwardAxis;
	Parms.Player = Player;
	Parms.Force = Force;
	Parms.Param_ForceForwardShake = Param_ForceForwardShake;
	Parms.ForwardShakeHardness = ForwardShakeHardness;

	UObject::ProcessEvent(Func, &Parms);
}

}

