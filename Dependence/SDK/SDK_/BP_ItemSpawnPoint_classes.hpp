#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemSpawnPoint

#include "Basic.hpp"

#include "ST_ItemPosition_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ItemSpawnPoint.BP_ItemSpawnPoint_C
// 0x0080 (0x0310 - 0x0290)
class ABP_ItemSpawnPoint_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    Billboard;                                         // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FST_ItemPosition>               ItemPosition;                                      // 0x02A0(0x0010)(Edit, BlueprintVisible)
	int32                                         NewVar_0;                                          // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2843[0x4];                                     // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 SpawningItem;                                      // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Spawned;                                           // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2844[0x7];                                     // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         ItemWhitelist;                                     // 0x02C8(0x0010)(Edit, BlueprintVisible)
	TArray<class UChildActorComponent*>           NewVar;                                            // 0x02D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<struct FVector>                        AdditionalSpawnPoints;                             // 0x02E8(0x0010)(Edit, BlueprintVisible)
	TArray<class USceneComponent*>                RelativeSpawnPoints;                               // 0x02F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          DrawDebugPooints;                                  // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void SpawnItem(class UClass* Item);
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_ItemSpawnPoint(int32 EntryPoint);
	void BreakStructArray(TArray<class UClass*>* ItemArr, TArray<struct FTransform>* PositionsArr);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ItemSpawnPoint_C">();
	}
	static class ABP_ItemSpawnPoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ItemSpawnPoint_C>();
	}
};
static_assert(alignof(ABP_ItemSpawnPoint_C) == 0x000008, "Wrong alignment on ABP_ItemSpawnPoint_C");
static_assert(sizeof(ABP_ItemSpawnPoint_C) == 0x000310, "Wrong size on ABP_ItemSpawnPoint_C");
static_assert(offsetof(ABP_ItemSpawnPoint_C, UberGraphFrame) == 0x000290, "Member 'ABP_ItemSpawnPoint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ItemSpawnPoint_C, Billboard) == 0x000298, "Member 'ABP_ItemSpawnPoint_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_ItemSpawnPoint_C, ItemPosition) == 0x0002A0, "Member 'ABP_ItemSpawnPoint_C::ItemPosition' has a wrong offset!");
static_assert(offsetof(ABP_ItemSpawnPoint_C, NewVar_0) == 0x0002B0, "Member 'ABP_ItemSpawnPoint_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(ABP_ItemSpawnPoint_C, SpawningItem) == 0x0002B8, "Member 'ABP_ItemSpawnPoint_C::SpawningItem' has a wrong offset!");
static_assert(offsetof(ABP_ItemSpawnPoint_C, Spawned) == 0x0002C0, "Member 'ABP_ItemSpawnPoint_C::Spawned' has a wrong offset!");
static_assert(offsetof(ABP_ItemSpawnPoint_C, ItemWhitelist) == 0x0002C8, "Member 'ABP_ItemSpawnPoint_C::ItemWhitelist' has a wrong offset!");
static_assert(offsetof(ABP_ItemSpawnPoint_C, NewVar) == 0x0002D8, "Member 'ABP_ItemSpawnPoint_C::NewVar' has a wrong offset!");
static_assert(offsetof(ABP_ItemSpawnPoint_C, AdditionalSpawnPoints) == 0x0002E8, "Member 'ABP_ItemSpawnPoint_C::AdditionalSpawnPoints' has a wrong offset!");
static_assert(offsetof(ABP_ItemSpawnPoint_C, RelativeSpawnPoints) == 0x0002F8, "Member 'ABP_ItemSpawnPoint_C::RelativeSpawnPoints' has a wrong offset!");
static_assert(offsetof(ABP_ItemSpawnPoint_C, DrawDebugPooints) == 0x000308, "Member 'ABP_ItemSpawnPoint_C::DrawDebugPooints' has a wrong offset!");

}

