#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_PlayerInterface

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BPI_PlayerInterface.BPI_PlayerInterface_C.Use
// 0x0010 (0x0010 - 0x0000)
struct BPI_PlayerInterface_C_Use final
{
public:
	class ABP_Player_C*                           Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Start;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_PlayerInterface_C_Use) == 0x000008, "Wrong alignment on BPI_PlayerInterface_C_Use");
static_assert(sizeof(BPI_PlayerInterface_C_Use) == 0x000010, "Wrong size on BPI_PlayerInterface_C_Use");
static_assert(offsetof(BPI_PlayerInterface_C_Use, Player) == 0x000000, "Member 'BPI_PlayerInterface_C_Use::Player' has a wrong offset!");
static_assert(offsetof(BPI_PlayerInterface_C_Use, Start) == 0x000008, "Member 'BPI_PlayerInterface_C_Use::Start' has a wrong offset!");

// Function BPI_PlayerInterface.BPI_PlayerInterface_C.InteractEnd
// 0x0008 (0x0008 - 0x0000)
struct BPI_PlayerInterface_C_InteractEnd final
{
public:
	class ABP_Player_C*                           Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_PlayerInterface_C_InteractEnd) == 0x000008, "Wrong alignment on BPI_PlayerInterface_C_InteractEnd");
static_assert(sizeof(BPI_PlayerInterface_C_InteractEnd) == 0x000008, "Wrong size on BPI_PlayerInterface_C_InteractEnd");
static_assert(offsetof(BPI_PlayerInterface_C_InteractEnd, Player) == 0x000000, "Member 'BPI_PlayerInterface_C_InteractEnd::Player' has a wrong offset!");

// Function BPI_PlayerInterface.BPI_PlayerInterface_C.InteractCanceled
// 0x0008 (0x0008 - 0x0000)
struct BPI_PlayerInterface_C_InteractCanceled final
{
public:
	class ABP_Player_C*                           Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_PlayerInterface_C_InteractCanceled) == 0x000008, "Wrong alignment on BPI_PlayerInterface_C_InteractCanceled");
static_assert(sizeof(BPI_PlayerInterface_C_InteractCanceled) == 0x000008, "Wrong size on BPI_PlayerInterface_C_InteractCanceled");
static_assert(offsetof(BPI_PlayerInterface_C_InteractCanceled, Player) == 0x000000, "Member 'BPI_PlayerInterface_C_InteractCanceled::Player' has a wrong offset!");

// Function BPI_PlayerInterface.BPI_PlayerInterface_C.Interact
// 0x00F0 (0x00F0 - 0x0000)
struct BPI_PlayerInterface_C_Interact final
{
public:
	class ABP_Player_C*                           Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BPI_PlayerInterface_C_Interact) == 0x000008, "Wrong alignment on BPI_PlayerInterface_C_Interact");
static_assert(sizeof(BPI_PlayerInterface_C_Interact) == 0x0000F0, "Wrong size on BPI_PlayerInterface_C_Interact");
static_assert(offsetof(BPI_PlayerInterface_C_Interact, Player) == 0x000000, "Member 'BPI_PlayerInterface_C_Interact::Player' has a wrong offset!");
static_assert(offsetof(BPI_PlayerInterface_C_Interact, Hit) == 0x000008, "Member 'BPI_PlayerInterface_C_Interact::Hit' has a wrong offset!");

}

