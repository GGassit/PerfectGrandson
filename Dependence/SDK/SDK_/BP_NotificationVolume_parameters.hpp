#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NotificationVolume

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_NotificationVolume.BP_NotificationVolume_C.Interact
// 0x00F0 (0x00F0 - 0x0000)
struct BP_NotificationVolume_C_Interact final
{
public:
	class ABP_Player_C*                           Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0008(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_NotificationVolume_C_Interact) == 0x000008, "Wrong alignment on BP_NotificationVolume_C_Interact");
static_assert(sizeof(BP_NotificationVolume_C_Interact) == 0x0000F0, "Wrong size on BP_NotificationVolume_C_Interact");
static_assert(offsetof(BP_NotificationVolume_C_Interact, Player) == 0x000000, "Member 'BP_NotificationVolume_C_Interact::Player' has a wrong offset!");
static_assert(offsetof(BP_NotificationVolume_C_Interact, Hit) == 0x000008, "Member 'BP_NotificationVolume_C_Interact::Hit' has a wrong offset!");

// Function BP_NotificationVolume.BP_NotificationVolume_C.ExecuteUbergraph_BP_NotificationVolume
// 0x00F8 (0x00F8 - 0x0000)
struct BP_NotificationVolume_C_ExecuteUbergraph_BP_NotificationVolume final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2545[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Player_C*                           K2Node_Event_Player;                               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0010(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_NotificationVolume_C_ExecuteUbergraph_BP_NotificationVolume) == 0x000008, "Wrong alignment on BP_NotificationVolume_C_ExecuteUbergraph_BP_NotificationVolume");
static_assert(sizeof(BP_NotificationVolume_C_ExecuteUbergraph_BP_NotificationVolume) == 0x0000F8, "Wrong size on BP_NotificationVolume_C_ExecuteUbergraph_BP_NotificationVolume");
static_assert(offsetof(BP_NotificationVolume_C_ExecuteUbergraph_BP_NotificationVolume, EntryPoint) == 0x000000, "Member 'BP_NotificationVolume_C_ExecuteUbergraph_BP_NotificationVolume::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NotificationVolume_C_ExecuteUbergraph_BP_NotificationVolume, K2Node_Event_Player) == 0x000008, "Member 'BP_NotificationVolume_C_ExecuteUbergraph_BP_NotificationVolume::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(BP_NotificationVolume_C_ExecuteUbergraph_BP_NotificationVolume, K2Node_Event_Hit) == 0x000010, "Member 'BP_NotificationVolume_C_ExecuteUbergraph_BP_NotificationVolume::K2Node_Event_Hit' has a wrong offset!");

}

