#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NamedSetting

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ESettingType_structs.hpp"
#include "Engine_structs.hpp"
#include "ESettingLevel_structs.hpp"
#include "WBP_WidgetBase_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass NamedSetting.NamedSetting_C
// 0x00A8 (0x0320 - 0x0278)
class UNamedSetting_C final : public UWBP_WidgetBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                Button_73;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UClickableText_C*                       ClickableText;                                     // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UClickableText_C*                       HighSetting;                                       // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_94;                                          // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_0;                                         // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               HighlightMaterialUp;                               // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x02B8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UMaterialInstanceDynamic*               HighlightMaterialDown;                             // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NormalizedMousePositionOnWidget;                   // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TextPositionAdd;                                   // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnValueChanged;                                    // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	ESettingLevel                                 SettingLevel;                                      // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESettingType                                  SettingType;                                       // 0x0301(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_287F[0x6];                                     // 0x0302(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_SettingsWidget_C*                  SettingsWidget;                                    // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class USettingPopup_C*                        CurrentPopup;                                      // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          NearMainText;                                      // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ValueToText(ESettingLevel Param_Index, class FText* Param_Text);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void SettingInit();
	void SettingApply();
	void SelectionHighlightController();
	void ReturnLevel_Event(class USettingPopup_C* Widget, ESettingLevel Level);
	void ResetCaller();
	void PreConstruct(bool IsDesignTime);
	void OnValueChanged__DelegateSignature(double Value, double Percent);
	void ExecuteUbergraph_NamedSetting(int32 EntryPoint);
	void Construct();
	void CheckHandle();
	void CallPopup(bool Param_NearMainText);
	void BndEvt__NamedSetting_HighSetting_K2Node_ComponentBoundEvent_0_OnClick__DelegateSignature(class UClickableText_C* Param_Text);
	void BndEvt__NamedSetting_ClickableText_K2Node_ComponentBoundEvent_1_OnClick__DelegateSignature(class UClickableText_C* Param_Text);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"NamedSetting_C">();
	}
	static class UNamedSetting_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNamedSetting_C>();
	}
};
static_assert(alignof(UNamedSetting_C) == 0x000008, "Wrong alignment on UNamedSetting_C");
static_assert(sizeof(UNamedSetting_C) == 0x000320, "Wrong size on UNamedSetting_C");
static_assert(offsetof(UNamedSetting_C, UberGraphFrame) == 0x000278, "Member 'UNamedSetting_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UNamedSetting_C, Button_73) == 0x000280, "Member 'UNamedSetting_C::Button_73' has a wrong offset!");
static_assert(offsetof(UNamedSetting_C, ClickableText) == 0x000288, "Member 'UNamedSetting_C::ClickableText' has a wrong offset!");
static_assert(offsetof(UNamedSetting_C, HighSetting) == 0x000290, "Member 'UNamedSetting_C::HighSetting' has a wrong offset!");
static_assert(offsetof(UNamedSetting_C, Image) == 0x000298, "Member 'UNamedSetting_C::Image' has a wrong offset!");
static_assert(offsetof(UNamedSetting_C, Image_94) == 0x0002A0, "Member 'UNamedSetting_C::Image_94' has a wrong offset!");
static_assert(offsetof(UNamedSetting_C, Overlay_0) == 0x0002A8, "Member 'UNamedSetting_C::Overlay_0' has a wrong offset!");
static_assert(offsetof(UNamedSetting_C, HighlightMaterialUp) == 0x0002B0, "Member 'UNamedSetting_C::HighlightMaterialUp' has a wrong offset!");
static_assert(offsetof(UNamedSetting_C, Text) == 0x0002B8, "Member 'UNamedSetting_C::Text' has a wrong offset!");
static_assert(offsetof(UNamedSetting_C, HighlightMaterialDown) == 0x0002D0, "Member 'UNamedSetting_C::HighlightMaterialDown' has a wrong offset!");
static_assert(offsetof(UNamedSetting_C, NormalizedMousePositionOnWidget) == 0x0002D8, "Member 'UNamedSetting_C::NormalizedMousePositionOnWidget' has a wrong offset!");
static_assert(offsetof(UNamedSetting_C, TextPositionAdd) == 0x0002E8, "Member 'UNamedSetting_C::TextPositionAdd' has a wrong offset!");
static_assert(offsetof(UNamedSetting_C, OnValueChanged) == 0x0002F0, "Member 'UNamedSetting_C::OnValueChanged' has a wrong offset!");
static_assert(offsetof(UNamedSetting_C, SettingLevel) == 0x000300, "Member 'UNamedSetting_C::SettingLevel' has a wrong offset!");
static_assert(offsetof(UNamedSetting_C, SettingType) == 0x000301, "Member 'UNamedSetting_C::SettingType' has a wrong offset!");
static_assert(offsetof(UNamedSetting_C, SettingsWidget) == 0x000308, "Member 'UNamedSetting_C::SettingsWidget' has a wrong offset!");
static_assert(offsetof(UNamedSetting_C, CurrentPopup) == 0x000310, "Member 'UNamedSetting_C::CurrentPopup' has a wrong offset!");
static_assert(offsetof(UNamedSetting_C, NearMainText) == 0x000318, "Member 'UNamedSetting_C::NearMainText' has a wrong offset!");

}

