#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Note

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "WBP_WidgetBase_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Note.WBP_Note_C
// 0x0090 (0x0308 - 0x0278)
class UWBP_Note_C final : public UWBP_WidgetBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       StartAnimation;                                    // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBackgroundBlur*                        BackgroundBlur_82;                                 // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_55;                                    // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_56;                                    // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UClickableText_C*                       ClickableText;                                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UClickableText_C*                       ClickableText_1;                                   // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UClickableText_C*                       ClickableText_2;                                   // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UClickableText_C*                       ClickableText_3;                                   // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_75;                                          // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_226;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMultiLineEditableTextBox*              MultiLineEditableTextBox_0;                        // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x02E0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Visible;                                           // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_297D[0x3];                                     // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFloatSpringState                      Spring_State;                                      // 0x02FC(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void ShowNote(const class FText& Param_Text);
	void ExecuteUbergraph_WBP_Note(int32 EntryPoint);
	void Construct();
	void CloseNote();
	void BndEvt__WBP_Note_ClickableText_1_K2Node_ComponentBoundEvent_0_OnClick__DelegateSignature(class UClickableText_C* Param_Text);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Note_C">();
	}
	static class UWBP_Note_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Note_C>();
	}
};
static_assert(alignof(UWBP_Note_C) == 0x000008, "Wrong alignment on UWBP_Note_C");
static_assert(sizeof(UWBP_Note_C) == 0x000308, "Wrong size on UWBP_Note_C");
static_assert(offsetof(UWBP_Note_C, UberGraphFrame) == 0x000278, "Member 'UWBP_Note_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Note_C, StartAnimation) == 0x000280, "Member 'UWBP_Note_C::StartAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_Note_C, BackgroundBlur_82) == 0x000288, "Member 'UWBP_Note_C::BackgroundBlur_82' has a wrong offset!");
static_assert(offsetof(UWBP_Note_C, CanvasPanel_55) == 0x000290, "Member 'UWBP_Note_C::CanvasPanel_55' has a wrong offset!");
static_assert(offsetof(UWBP_Note_C, CanvasPanel_56) == 0x000298, "Member 'UWBP_Note_C::CanvasPanel_56' has a wrong offset!");
static_assert(offsetof(UWBP_Note_C, ClickableText) == 0x0002A0, "Member 'UWBP_Note_C::ClickableText' has a wrong offset!");
static_assert(offsetof(UWBP_Note_C, ClickableText_1) == 0x0002A8, "Member 'UWBP_Note_C::ClickableText_1' has a wrong offset!");
static_assert(offsetof(UWBP_Note_C, ClickableText_2) == 0x0002B0, "Member 'UWBP_Note_C::ClickableText_2' has a wrong offset!");
static_assert(offsetof(UWBP_Note_C, ClickableText_3) == 0x0002B8, "Member 'UWBP_Note_C::ClickableText_3' has a wrong offset!");
static_assert(offsetof(UWBP_Note_C, Image_0) == 0x0002C0, "Member 'UWBP_Note_C::Image_0' has a wrong offset!");
static_assert(offsetof(UWBP_Note_C, Image_75) == 0x0002C8, "Member 'UWBP_Note_C::Image_75' has a wrong offset!");
static_assert(offsetof(UWBP_Note_C, Image_226) == 0x0002D0, "Member 'UWBP_Note_C::Image_226' has a wrong offset!");
static_assert(offsetof(UWBP_Note_C, MultiLineEditableTextBox_0) == 0x0002D8, "Member 'UWBP_Note_C::MultiLineEditableTextBox_0' has a wrong offset!");
static_assert(offsetof(UWBP_Note_C, Text) == 0x0002E0, "Member 'UWBP_Note_C::Text' has a wrong offset!");
static_assert(offsetof(UWBP_Note_C, Visible) == 0x0002F8, "Member 'UWBP_Note_C::Visible' has a wrong offset!");
static_assert(offsetof(UWBP_Note_C, Spring_State) == 0x0002FC, "Member 'UWBP_Note_C::Spring_State' has a wrong offset!");

}

