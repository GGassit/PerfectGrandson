#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CinematicPawn

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CinematicPawn.BP_CinematicPawn_C
// 0x00B0 (0x06D0 - 0x0620)
class ABP_CinematicPawn_C final : public ACharacter
{
public:
	uint8                                         Pad_298A[0x8];                                     // 0x0618(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0620(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        Scene1;                                            // 0x0628(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0630(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        ZoomLoop;                                          // 0x0638(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCineCameraComponent*                   CineCamera;                                        // 0x0640(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm1;                                        // 0x0648(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm;                                         // 0x0650(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x0658(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_NewTrack_0_3D524ECE45EFB27AA1C8A6A704871D35; // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline__Direction_3D524ECE45EFB27AA1C8A6A704871D35; // 0x0664(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_298B[0x3];                                     // 0x0665(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline;                                          // 0x0668(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              MoveVector;                                        // 0x0670(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Movement;                                          // 0x0680(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_298C[0x7];                                     // 0x0681(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DefaultSpeed;                                      // 0x0688(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStackBox*                              Stack_Box_0;                                       // 0x0690(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        WalkSpeed;                                         // 0x0698(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SprintSpeed;                                       // 0x06A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Zooming;                                           // 0x06A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Zoomed;                                            // 0x06A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanZoom;                                           // 0x06AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Granny;                                            // 0x06AB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_298D[0x4];                                     // 0x06AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NewVar;                                            // 0x06B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        NewVar_0;                                          // 0x06C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void Zoom(bool Param_Zoom);
	void Timeline__UpdateFunc();
	void Timeline__FinishedFunc();
	void ReturnSecodnOption_Event();
	void ReturnFirstOption_Event();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void OnClick_Event(class UClickableText_C* Text);
	void OnActorBeginOverlap_Event(class AActor* OverlappedActor, class AActor* OtherActor);
	void LookAtHouse();
	void InpActEvt_IA_Use_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction);
	void Footstep();
	void ExecuteUbergraph_BP_CinematicPawn(int32 EntryPoint);
	void CustomEvent();
	void CameraShake();
	void AddRecEffectUi();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CinematicPawn_C">();
	}
	static class ABP_CinematicPawn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CinematicPawn_C>();
	}
};
static_assert(alignof(ABP_CinematicPawn_C) == 0x000010, "Wrong alignment on ABP_CinematicPawn_C");
static_assert(sizeof(ABP_CinematicPawn_C) == 0x0006D0, "Wrong size on ABP_CinematicPawn_C");
static_assert(offsetof(ABP_CinematicPawn_C, UberGraphFrame) == 0x000620, "Member 'ABP_CinematicPawn_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CinematicPawn_C, Scene1) == 0x000628, "Member 'ABP_CinematicPawn_C::Scene1' has a wrong offset!");
static_assert(offsetof(ABP_CinematicPawn_C, Scene) == 0x000630, "Member 'ABP_CinematicPawn_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_CinematicPawn_C, ZoomLoop) == 0x000638, "Member 'ABP_CinematicPawn_C::ZoomLoop' has a wrong offset!");
static_assert(offsetof(ABP_CinematicPawn_C, CineCamera) == 0x000640, "Member 'ABP_CinematicPawn_C::CineCamera' has a wrong offset!");
static_assert(offsetof(ABP_CinematicPawn_C, SpringArm1) == 0x000648, "Member 'ABP_CinematicPawn_C::SpringArm1' has a wrong offset!");
static_assert(offsetof(ABP_CinematicPawn_C, SpringArm) == 0x000650, "Member 'ABP_CinematicPawn_C::SpringArm' has a wrong offset!");
static_assert(offsetof(ABP_CinematicPawn_C, SpotLight) == 0x000658, "Member 'ABP_CinematicPawn_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_CinematicPawn_C, Timeline_NewTrack_0_3D524ECE45EFB27AA1C8A6A704871D35) == 0x000660, "Member 'ABP_CinematicPawn_C::Timeline_NewTrack_0_3D524ECE45EFB27AA1C8A6A704871D35' has a wrong offset!");
static_assert(offsetof(ABP_CinematicPawn_C, Timeline__Direction_3D524ECE45EFB27AA1C8A6A704871D35) == 0x000664, "Member 'ABP_CinematicPawn_C::Timeline__Direction_3D524ECE45EFB27AA1C8A6A704871D35' has a wrong offset!");
static_assert(offsetof(ABP_CinematicPawn_C, Timeline) == 0x000668, "Member 'ABP_CinematicPawn_C::Timeline' has a wrong offset!");
static_assert(offsetof(ABP_CinematicPawn_C, MoveVector) == 0x000670, "Member 'ABP_CinematicPawn_C::MoveVector' has a wrong offset!");
static_assert(offsetof(ABP_CinematicPawn_C, Movement) == 0x000680, "Member 'ABP_CinematicPawn_C::Movement' has a wrong offset!");
static_assert(offsetof(ABP_CinematicPawn_C, DefaultSpeed) == 0x000688, "Member 'ABP_CinematicPawn_C::DefaultSpeed' has a wrong offset!");
static_assert(offsetof(ABP_CinematicPawn_C, Stack_Box_0) == 0x000690, "Member 'ABP_CinematicPawn_C::Stack_Box_0' has a wrong offset!");
static_assert(offsetof(ABP_CinematicPawn_C, WalkSpeed) == 0x000698, "Member 'ABP_CinematicPawn_C::WalkSpeed' has a wrong offset!");
static_assert(offsetof(ABP_CinematicPawn_C, SprintSpeed) == 0x0006A0, "Member 'ABP_CinematicPawn_C::SprintSpeed' has a wrong offset!");
static_assert(offsetof(ABP_CinematicPawn_C, Zooming) == 0x0006A8, "Member 'ABP_CinematicPawn_C::Zooming' has a wrong offset!");
static_assert(offsetof(ABP_CinematicPawn_C, Zoomed) == 0x0006A9, "Member 'ABP_CinematicPawn_C::Zoomed' has a wrong offset!");
static_assert(offsetof(ABP_CinematicPawn_C, CanZoom) == 0x0006AA, "Member 'ABP_CinematicPawn_C::CanZoom' has a wrong offset!");
static_assert(offsetof(ABP_CinematicPawn_C, Granny) == 0x0006AB, "Member 'ABP_CinematicPawn_C::Granny' has a wrong offset!");
static_assert(offsetof(ABP_CinematicPawn_C, NewVar) == 0x0006B0, "Member 'ABP_CinematicPawn_C::NewVar' has a wrong offset!");
static_assert(offsetof(ABP_CinematicPawn_C, NewVar_0) == 0x0006C8, "Member 'ABP_CinematicPawn_C::NewVar_0' has a wrong offset!");

}

