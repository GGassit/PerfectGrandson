#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RemoteControl

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_ItemBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RemoteControl.BP_RemoteControl_C
// 0x0020 (0x0410 - 0x03F0)
class ABP_RemoteControl_C final : public ABP_ItemBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_RemoteControl_C;                 // 0x03F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetComponent*                       Widget;                                            // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Failed;                                            // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_Player_C*                           Player_0;                                          // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Use(class ABP_Player_C* Param_Player, bool Start);
	void ReceiveBeginPlay();
	void Interact(class ABP_Player_C* Param_Player, const struct FHitResult& Hit);
	void ExecuteUbergraph_BP_RemoteControl(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RemoteControl_C">();
	}
	static class ABP_RemoteControl_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_RemoteControl_C>();
	}
};
static_assert(alignof(ABP_RemoteControl_C) == 0x000010, "Wrong alignment on ABP_RemoteControl_C");
static_assert(sizeof(ABP_RemoteControl_C) == 0x000410, "Wrong size on ABP_RemoteControl_C");
static_assert(offsetof(ABP_RemoteControl_C, UberGraphFrame_BP_RemoteControl_C) == 0x0003F0, "Member 'ABP_RemoteControl_C::UberGraphFrame_BP_RemoteControl_C' has a wrong offset!");
static_assert(offsetof(ABP_RemoteControl_C, Widget) == 0x0003F8, "Member 'ABP_RemoteControl_C::Widget' has a wrong offset!");
static_assert(offsetof(ABP_RemoteControl_C, Failed) == 0x000400, "Member 'ABP_RemoteControl_C::Failed' has a wrong offset!");
static_assert(offsetof(ABP_RemoteControl_C, Player_0) == 0x000408, "Member 'ABP_RemoteControl_C::Player_0' has a wrong offset!");

}

