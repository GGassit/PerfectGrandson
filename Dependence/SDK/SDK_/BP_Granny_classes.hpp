#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Granny

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ST_Task_structs.hpp"
#include "EMood_structs.hpp"
#include "AIModule_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EDifficulty_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Granny.BP_Granny_C
// 0x02D0 (0x08F0 - 0x0620)
class ABP_Granny_C final : public ACharacter
{
public:
	uint8                                         Pad_24C5[0x8];                                     // 0x0618(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0620(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UGroomComponent*                        Groom;                                             // 0x0628(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0630(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio1;                                            // 0x0638(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAiCamera_C*                            AiCamera;                                          // 0x0640(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x0648(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0650(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 GrannyIdle;                                        // 0x0658(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm;                                         // 0x0660(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_NewTrack_0_D0930E9D4D03C209F9DD158E3FF122C7; // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1__Direction_D0930E9D4D03C209F9DD158E3FF122C7; // 0x066C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C6[0x3];                                     // 0x066D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x0670(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_8F71D3E34D8279E835E1CB975957A0EF; // 0x0678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_8F71D3E34D8279E835E1CB975957A0EF; // 0x067C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C7[0x3];                                     // 0x067D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0680(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_NewTrack_0_DA14533C453B59CD7E8860800446771E; // 0x0688(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline__Direction_DA14533C453B59CD7E8860800446771E; // 0x068C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C8[0x3];                                     // 0x068D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline;                                          // 0x0690(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EMood                                         GrannyState;                                       // 0x0698(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C9[0x7];                                     // 0x0699(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RunSpeed;                                          // 0x06A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               HeadRotation;                                      // 0x06A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        HeadAlpha;                                         // 0x06C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SensingFocus;                                      // 0x06C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SensingFocusLocation;                              // 0x06D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SensingFocusDistance;                              // 0x06E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24CA[0x4];                                     // 0x06EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         SawActors;                                         // 0x06F0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class ABP_Player_C*                           Player;                                            // 0x0700(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_Player_C*                           As_BP_Player;                                      // 0x0708(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        VigilanceIdle;                                     // 0x0710(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VigilanceAngry;                                    // 0x0718(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MovingToPlayer;                                    // 0x0720(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Seee;                                              // 0x0721(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24CB[0x6];                                     // 0x0722(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LastSeePlayerLoc;                                  // 0x0728(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Center;                                            // 0x0740(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AfterFinding;                                      // 0x0758(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24CC[0x3];                                     // 0x0759(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         N;                                                 // 0x075C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowTrace;                                        // 0x0760(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Herobrinized;                                      // 0x0761(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SeePlayer;                                         // 0x0762(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cansee;                                            // 0x0763(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24CD[0x4];                                     // 0x0764(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FST_Task>                       Tasks;                                             // 0x0768(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FST_Task>                       Tasks_Reflection;                                  // 0x0778(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                LastNoiseLocation;                                 // 0x0788(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WalkSpeed;                                         // 0x07A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               EyesStartRot;                                      // 0x07A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         SenseDelay;                                        // 0x07C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SenseTimes;                                        // 0x07C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Stimulus_Strength;                                 // 0x07C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24CE[0x4];                                     // 0x07CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FST_Task>                       Tasks_0;                                           // 0x07D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FHitResult                             ATWVYTVDYTVAUBFDINAIUFB;                           // 0x07E0(0x00E8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ItemInHands;                                       // 0x08C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24CF[0x7];                                     // 0x08C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ItemBase_C*                         TakenItem;                                         // 0x08D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class ATargetPoint*>                   GoodTrapPoints;                                    // 0x08D8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	bool                                          CathedThePlayer;                                   // 0x08E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UIGEvyFEABHKFUEH();
	void Timeline__UpdateFunc();
	void Timeline__FinishedFunc();
	void Timeline_1__UpdateFunc();
	void Timeline_1__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void ThrowMyItems();
	void TasksDebug();
	void TaskComplete_Event(const struct FST_Task& Task);
	void StartNoiseSeeking(const struct FVector& NoiseLocation);
	void ShowEyes();
	void SenseCamera();
	void SelectTask();
	void Screamer();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveDestroyed();
	void ReceiveBeginPlay();
	void RandomEyeDerg();
	void PlayAngryMorph();
	void OpenDoor();
	void OnSuccess_E8896B7E4F9BD749C50E528AB02748E9(EPathFollowingResult MovementResult);
	void OnSuccess_77A6E78F4B82EDA58966EA84452C11C8(EPathFollowingResult MovementResult);
	void OnSuccess_6C2D868343FB20CA9ED08CABE6031AA2(EPathFollowingResult MovementResult);
	void OnFail_E8896B7E4F9BD749C50E528AB02748E9(EPathFollowingResult MovementResult);
	void OnFail_77A6E78F4B82EDA58966EA84452C11C8(EPathFollowingResult MovementResult);
	void OnFail_6C2D868343FB20CA9ED08CABE6031AA2(EPathFollowingResult MovementResult);
	void NightmareImprovements();
	void NearTheGoodTrapPoint(bool* GoodPlace);
	void NAUJIFENIFU();
	void MakeTrap();
	void Ihbfdsbjnfds();
	void Herobrinize();
	void HeadAnimation();
	void GrannySeePlayer(class ABP_Player_C** Param_Player, bool* See);
	double GetSenseStrength(float* ReturnValue1, float* ReturnValue2);
	void GetRandomPointInTorus(const struct FVector& Param_Center, const struct FVector& Up, const struct FVector& Forward, double TorusRadius, double TorusThikness, double Angle, int32 Subdivisions, struct FVector* Point);
	void GetRandomIdlePoint(class FName Tag, struct FVector* Vector);
	void GetNearbyRoom(const struct FVector& V2, struct FVector* Output);
	void GetBestTaskId(TArray<struct FST_Task>& Array, int32* Param_Index);
	void GetAllTasks(TArray<struct FST_Task>* Param_Tasks);
	void Get_Nearby_Predict_Spline(const struct FVector& V2, struct FVector* Location, class AAiPredictFlow_C** Flow);
	void Footstep();
	void Fg();
	void ExecuteUbergraph_BP_Granny(int32 EntryPoint);
	void DrawNoises(const struct FVector& Param_Center);
	void CheckDistanceToPlayer();
	void CatchPlayer();
	void CameraSetup();
	void BndEvt__BP_Granny_Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void AiHasTask(class FName TaskTag, bool* Return);
	void AddTask(class FName Task_Name, double Task_Weight, double Task_Time_Limit, bool Disposable);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Granny_C">();
	}
	static class ABP_Granny_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Granny_C>();
	}
};
static_assert(alignof(ABP_Granny_C) == 0x000010, "Wrong alignment on ABP_Granny_C");
static_assert(sizeof(ABP_Granny_C) == 0x0008F0, "Wrong size on ABP_Granny_C");
static_assert(offsetof(ABP_Granny_C, UberGraphFrame) == 0x000620, "Member 'ABP_Granny_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, Groom) == 0x000628, "Member 'ABP_Granny_C::Groom' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, Sphere) == 0x000630, "Member 'ABP_Granny_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, Audio1) == 0x000638, "Member 'ABP_Granny_C::Audio1' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, AiCamera) == 0x000640, "Member 'ABP_Granny_C::AiCamera' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, Audio) == 0x000648, "Member 'ABP_Granny_C::Audio' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, Scene) == 0x000650, "Member 'ABP_Granny_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, GrannyIdle) == 0x000658, "Member 'ABP_Granny_C::GrannyIdle' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, SpringArm) == 0x000660, "Member 'ABP_Granny_C::SpringArm' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, Timeline_1_NewTrack_0_D0930E9D4D03C209F9DD158E3FF122C7) == 0x000668, "Member 'ABP_Granny_C::Timeline_1_NewTrack_0_D0930E9D4D03C209F9DD158E3FF122C7' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, Timeline_1__Direction_D0930E9D4D03C209F9DD158E3FF122C7) == 0x00066C, "Member 'ABP_Granny_C::Timeline_1__Direction_D0930E9D4D03C209F9DD158E3FF122C7' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, Timeline_1) == 0x000670, "Member 'ABP_Granny_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, Timeline_0_NewTrack_0_8F71D3E34D8279E835E1CB975957A0EF) == 0x000678, "Member 'ABP_Granny_C::Timeline_0_NewTrack_0_8F71D3E34D8279E835E1CB975957A0EF' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, Timeline_0__Direction_8F71D3E34D8279E835E1CB975957A0EF) == 0x00067C, "Member 'ABP_Granny_C::Timeline_0__Direction_8F71D3E34D8279E835E1CB975957A0EF' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, Timeline_0) == 0x000680, "Member 'ABP_Granny_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, Timeline_NewTrack_0_DA14533C453B59CD7E8860800446771E) == 0x000688, "Member 'ABP_Granny_C::Timeline_NewTrack_0_DA14533C453B59CD7E8860800446771E' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, Timeline__Direction_DA14533C453B59CD7E8860800446771E) == 0x00068C, "Member 'ABP_Granny_C::Timeline__Direction_DA14533C453B59CD7E8860800446771E' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, Timeline) == 0x000690, "Member 'ABP_Granny_C::Timeline' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, GrannyState) == 0x000698, "Member 'ABP_Granny_C::GrannyState' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, RunSpeed) == 0x0006A0, "Member 'ABP_Granny_C::RunSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, HeadRotation) == 0x0006A8, "Member 'ABP_Granny_C::HeadRotation' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, HeadAlpha) == 0x0006C0, "Member 'ABP_Granny_C::HeadAlpha' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, SensingFocus) == 0x0006C8, "Member 'ABP_Granny_C::SensingFocus' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, SensingFocusLocation) == 0x0006D0, "Member 'ABP_Granny_C::SensingFocusLocation' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, SensingFocusDistance) == 0x0006E8, "Member 'ABP_Granny_C::SensingFocusDistance' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, SawActors) == 0x0006F0, "Member 'ABP_Granny_C::SawActors' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, Player) == 0x000700, "Member 'ABP_Granny_C::Player' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, As_BP_Player) == 0x000708, "Member 'ABP_Granny_C::As_BP_Player' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, VigilanceIdle) == 0x000710, "Member 'ABP_Granny_C::VigilanceIdle' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, VigilanceAngry) == 0x000718, "Member 'ABP_Granny_C::VigilanceAngry' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, MovingToPlayer) == 0x000720, "Member 'ABP_Granny_C::MovingToPlayer' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, Seee) == 0x000721, "Member 'ABP_Granny_C::Seee' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, LastSeePlayerLoc) == 0x000728, "Member 'ABP_Granny_C::LastSeePlayerLoc' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, Center) == 0x000740, "Member 'ABP_Granny_C::Center' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, AfterFinding) == 0x000758, "Member 'ABP_Granny_C::AfterFinding' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, N) == 0x00075C, "Member 'ABP_Granny_C::N' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, AllowTrace) == 0x000760, "Member 'ABP_Granny_C::AllowTrace' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, Herobrinized) == 0x000761, "Member 'ABP_Granny_C::Herobrinized' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, SeePlayer) == 0x000762, "Member 'ABP_Granny_C::SeePlayer' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, Cansee) == 0x000763, "Member 'ABP_Granny_C::Cansee' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, Tasks) == 0x000768, "Member 'ABP_Granny_C::Tasks' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, Tasks_Reflection) == 0x000778, "Member 'ABP_Granny_C::Tasks_Reflection' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, LastNoiseLocation) == 0x000788, "Member 'ABP_Granny_C::LastNoiseLocation' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, WalkSpeed) == 0x0007A0, "Member 'ABP_Granny_C::WalkSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, EyesStartRot) == 0x0007A8, "Member 'ABP_Granny_C::EyesStartRot' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, SenseDelay) == 0x0007C0, "Member 'ABP_Granny_C::SenseDelay' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, SenseTimes) == 0x0007C4, "Member 'ABP_Granny_C::SenseTimes' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, Stimulus_Strength) == 0x0007C8, "Member 'ABP_Granny_C::Stimulus_Strength' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, Tasks_0) == 0x0007D0, "Member 'ABP_Granny_C::Tasks_0' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, ATWVYTVDYTVAUBFDINAIUFB) == 0x0007E0, "Member 'ABP_Granny_C::ATWVYTVDYTVAUBFDINAIUFB' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, ItemInHands) == 0x0008C8, "Member 'ABP_Granny_C::ItemInHands' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, TakenItem) == 0x0008D0, "Member 'ABP_Granny_C::TakenItem' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, GoodTrapPoints) == 0x0008D8, "Member 'ABP_Granny_C::GoodTrapPoints' has a wrong offset!");
static_assert(offsetof(ABP_Granny_C, CathedThePlayer) == 0x0008E8, "Member 'ABP_Granny_C::CathedThePlayer' has a wrong offset!");

}

