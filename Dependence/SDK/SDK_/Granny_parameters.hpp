#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Granny

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Granny.AiCameraComponent.ScanActorsInCamera
// 0x0010 (0x0010 - 0x0000)
struct AiCameraComponent_ScanActorsInCamera final
{
public:
	TArray<class AActor*>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AiCameraComponent_ScanActorsInCamera) == 0x000008, "Wrong alignment on AiCameraComponent_ScanActorsInCamera");
static_assert(sizeof(AiCameraComponent_ScanActorsInCamera) == 0x000010, "Wrong size on AiCameraComponent_ScanActorsInCamera");
static_assert(offsetof(AiCameraComponent_ScanActorsInCamera, ReturnValue) == 0x000000, "Member 'AiCameraComponent_ScanActorsInCamera::ReturnValue' has a wrong offset!");

// Function Granny.GrannyInstance.GetCommandArrayFromFile
// 0x0020 (0x0020 - 0x0000)
struct GrannyInstance_GetCommandArrayFromFile final
{
public:
	class FString                                 Path;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(GrannyInstance_GetCommandArrayFromFile) == 0x000008, "Wrong alignment on GrannyInstance_GetCommandArrayFromFile");
static_assert(sizeof(GrannyInstance_GetCommandArrayFromFile) == 0x000020, "Wrong size on GrannyInstance_GetCommandArrayFromFile");
static_assert(offsetof(GrannyInstance_GetCommandArrayFromFile, Path) == 0x000000, "Member 'GrannyInstance_GetCommandArrayFromFile::Path' has a wrong offset!");
static_assert(offsetof(GrannyInstance_GetCommandArrayFromFile, ReturnValue) == 0x000010, "Member 'GrannyInstance_GetCommandArrayFromFile::ReturnValue' has a wrong offset!");

// Function Granny.MainBFL.GetLuminancePixelPercent
// 0x0028 (0x0028 - 0x0000)
struct MainBFL_GetLuminancePixelPercent final
{
public:
	TArray<struct FLinearColor>                   InPixels;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         NearlyEqualTo;                                     // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Tolerance;                                         // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLinearColor>                   ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MainBFL_GetLuminancePixelPercent) == 0x000008, "Wrong alignment on MainBFL_GetLuminancePixelPercent");
static_assert(sizeof(MainBFL_GetLuminancePixelPercent) == 0x000028, "Wrong size on MainBFL_GetLuminancePixelPercent");
static_assert(offsetof(MainBFL_GetLuminancePixelPercent, InPixels) == 0x000000, "Member 'MainBFL_GetLuminancePixelPercent::InPixels' has a wrong offset!");
static_assert(offsetof(MainBFL_GetLuminancePixelPercent, NearlyEqualTo) == 0x000010, "Member 'MainBFL_GetLuminancePixelPercent::NearlyEqualTo' has a wrong offset!");
static_assert(offsetof(MainBFL_GetLuminancePixelPercent, Tolerance) == 0x000014, "Member 'MainBFL_GetLuminancePixelPercent::Tolerance' has a wrong offset!");
static_assert(offsetof(MainBFL_GetLuminancePixelPercent, ReturnValue) == 0x000018, "Member 'MainBFL_GetLuminancePixelPercent::ReturnValue' has a wrong offset!");

// Function Granny.MainBFL.ShuffleArray
// 0x0028 (0x0028 - 0x0000)
struct MainBFL_ShuffleArray final
{
public:
	TArray<class AActor*>                         MyArray;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         Seed;                                              // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C78[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MainBFL_ShuffleArray) == 0x000008, "Wrong alignment on MainBFL_ShuffleArray");
static_assert(sizeof(MainBFL_ShuffleArray) == 0x000028, "Wrong size on MainBFL_ShuffleArray");
static_assert(offsetof(MainBFL_ShuffleArray, MyArray) == 0x000000, "Member 'MainBFL_ShuffleArray::MyArray' has a wrong offset!");
static_assert(offsetof(MainBFL_ShuffleArray, Seed) == 0x000010, "Member 'MainBFL_ShuffleArray::Seed' has a wrong offset!");
static_assert(offsetof(MainBFL_ShuffleArray, ReturnValue) == 0x000018, "Member 'MainBFL_ShuffleArray::ReturnValue' has a wrong offset!");

}

